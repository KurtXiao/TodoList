{"ast":null,"code":"import{SET_DISPLAY_CONDITIONS,FILTER_DISPLAY}from'../actions/actionTypes';import{filterEvents}from'../utils/redux';function displayArea(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_DISPLAY_CONDITIONS:if(action.content.conditions==='')return state;return Object.assign({},state,action.content);case FILTER_DISPLAY:var newState=JSON.parse(JSON.stringify(state));var newEvents=filterEvents(newState.conditions,action.content.allEvents);newState.events=newEvents;return newState;default:return state;}}export default displayArea;","map":{"version":3,"sources":["/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/displayArea.js"],"names":["SET_DISPLAY_CONDITIONS","FILTER_DISPLAY","filterEvents","displayArea","state","action","type","content","conditions","Object","assign","newState","JSON","parse","stringify","newEvents","allEvents","events"],"mappings":"AAAA,OAASA,sBAAT,CAAiCC,cAAjC,KAAuD,wBAAvD,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA,QAASC,CAAAA,WAAT,EAA2C,IAAtBC,CAAAA,KAAsB,2DAAd,IAAc,IAARC,CAAAA,MAAQ,2CACvC,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKN,CAAAA,sBAAL,CACI,GAAGK,MAAM,CAACE,OAAP,CAAeC,UAAf,GAA8B,EAAjC,CAAqC,MAAOJ,CAAAA,KAAP,CACrC,MAAOK,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBN,KAAlB,CAAyBC,MAAM,CAACE,OAAhC,CAAP,CACJ,IAAKN,CAAAA,cAAL,CACI,GAAIU,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,KAAf,CAAX,CAAf,CACA,GAAIW,CAAAA,SAAS,CAAGb,YAAY,CAACS,QAAQ,CAACH,UAAV,CAAsBH,MAAM,CAACE,OAAP,CAAeS,SAArC,CAA5B,CACAL,QAAQ,CAACM,MAAT,CAAkBF,SAAlB,CACA,MAAOJ,CAAAA,QAAP,CACJ,QACI,MAAOP,CAAAA,KAAP,CAVR,CAYH,CAED,cAAeD,CAAAA,WAAf","sourcesContent":["import { SET_DISPLAY_CONDITIONS, FILTER_DISPLAY } from '../actions/actionTypes';\nimport { filterEvents } from '../utils/redux';\n\nfunction displayArea(state = null, action) {\n    switch(action.type) {\n        case SET_DISPLAY_CONDITIONS:\n            if(action.content.conditions === '') return state;\n            return Object.assign({}, state, action.content);\n        case FILTER_DISPLAY:\n            let newState = JSON.parse(JSON.stringify(state));\n            let newEvents = filterEvents(newState.conditions, action.content.allEvents);\n            newState.events = newEvents;\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default displayArea;"]},"metadata":{},"sourceType":"module"}