{"ast":null,"code":"var _jsxFileName = \"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Calendar.js\";\nimport React from 'react';\nimport '../styles/Calendar.css';\nimport leftArrow from '../images/arrow-left.png';\nimport rightArrow from '../images/arrow-right.png';\nimport leftDoubleArrow from '../images/arrow-double-left.png';\nimport rightDoubleArrow from '../images/arrow-double-right.png';\nimport { dateToDateObj, getMonthYear, getWeekDays, getLastMonthTotalDates, getCurrMonthTotalDates, getCurrMonthStartingDay, getNextMonthStartingDay, goToPrevYear, goToNextYear, goToPrevMonth, goToNextMonth, getDates } from '../utils/calendar';\nimport SingleDateCalendar from './SingleDateCalendar';\nimport { setDisplayConditions, filterDisplayEvents } from '../actions/displayArea';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markDate: dateToDateObj(new Date()),\n      activeDate: dateToDateObj(new Date())\n    };\n  }\n  /*\n  async setActiveDate(date) {\n     let dateObj = this.state.markDate;\n     dateObj[2] = date;\n     await this.setState({\n         markDate: dateObj,\n         activeDate: dateObj,\n     });\n     await store.dispatch(setDisplayConditions({activeDate: dateObj}));\n     await store.dispatch(filterDisplayEvents(store.getState().allEvents.events));\n  }\n  getDates(markDate, activeDate) {\n     let arr = [];\n     let lastMonthTotalDates = getLastMonthTotalDates(markDate);\n     let currMonthTotalDates = getCurrMonthTotalDates(markDate);\n     let currMonthStartingDay = getCurrMonthStartingDay(markDate);\n     let nextMonthStartingDay = getNextMonthStartingDay(markDate);\n     for(let i = lastMonthTotalDates - currMonthStartingDay + 1; i <= lastMonthTotalDates; ++i) {\n         arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>)\n     }\n     for(let i = 1; i <= currMonthTotalDates; ++i) {\n         if(getMonthYear(markDate) === getMonthYear(activeDate) && i === activeDate[2]) arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'#dc4c3e'} fontColor={'white'} setActiveDate={this.setActiveDate.bind(this)}/>)\n         else arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'black'} setActiveDate={this.setActiveDate.bind(this)}/>)\n         \n     }\n     for(let i = 1; i <= 7 - nextMonthStartingDay; ++i) {\n         arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>);\n     }\n     return arr;\n  }*/\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"calendar-interface\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: goToPrevYear.bind(this),\n          className: \"arrow left-double-arrow\",\n          src: leftDoubleArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: goToNextYear.bind(this),\n          className: \"arrow right-double-arrow\",\n          src: rightDoubleArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: goToPrevMonth.bind(this),\n          className: \"arrow left-arrow\",\n          src: leftArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: goToNextMonth.bind(this),\n          className: \"arrow right-arrow\",\n          src: rightArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"month\",\n          children: getMonthYear(this.state.markDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dates\",\n        children: [getWeekDays(false), getDates(this.state.markDate, this.state.activeDate).bind(this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Calendar.js"],"names":["React","leftArrow","rightArrow","leftDoubleArrow","rightDoubleArrow","dateToDateObj","getMonthYear","getWeekDays","getLastMonthTotalDates","getCurrMonthTotalDates","getCurrMonthStartingDay","getNextMonthStartingDay","goToPrevYear","goToNextYear","goToPrevMonth","goToNextMonth","getDates","SingleDateCalendar","setDisplayConditions","filterDisplayEvents","store","Calendar","Component","constructor","props","state","markDate","Date","activeDate","render","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,WAAtC,EAAmDC,sBAAnD,EAA2EC,sBAA3E,EAAmGC,uBAAnG,EAA4HC,uBAA5H,EAAqJC,YAArJ,EAAmKC,YAAnK,EAAiLC,aAAjL,EAAgMC,aAAhM,EAA+MC,QAA/M,QAA8N,mBAA9N;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,QAA0D,wBAA1D;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,QAAN,SAAuBrB,KAAK,CAACsB,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAErB,aAAa,CAAC,IAAIsB,IAAJ,EAAD,CADd;AAETC,MAAAA,UAAU,EAAEvB,aAAa,CAAC,IAAIsB,IAAJ,EAAD;AAFhB,KAAb;AAIH;AAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,8BACH;AAAK,QAAA,EAAE,EAAC,oBAAR;AAAA,gCACI;AAAK,UAAA,OAAO,EAAEjB,YAAY,CAACkB,IAAb,CAAkB,IAAlB,CAAd;AAAuC,UAAA,SAAS,EAAC,yBAAjD;AAA2E,UAAA,GAAG,EAAE3B;AAAhF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,OAAO,EAAEU,YAAY,CAACiB,IAAb,CAAkB,IAAlB,CAAd;AAAuC,UAAA,SAAS,EAAC,0BAAjD;AAA4E,UAAA,GAAG,EAAE1B;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,OAAO,EAAEU,aAAa,CAACgB,IAAd,CAAmB,IAAnB,CAAd;AAAwC,UAAA,SAAS,EAAC,kBAAlD;AAAqE,UAAA,GAAG,EAAE7B;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,OAAO,EAAEc,aAAa,CAACe,IAAd,CAAmB,IAAnB,CAAd;AAAwC,UAAA,SAAS,EAAC,mBAAlD;AAAsE,UAAA,GAAG,EAAE5B;AAA3E;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAM,UAAA,EAAE,EAAC,OAAT;AAAA,oBAAkBI,YAAY,CAAC,KAAKmB,KAAL,CAAWC,QAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAQH;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA,mBACKnB,WAAW,CAAC,KAAD,CADhB,EAEKS,QAAQ,CAAC,KAAKS,KAAL,CAAWC,QAAZ,EAAsB,KAAKD,KAAL,CAAWG,UAAjC,CAAR,CAAqDE,IAArD,CAA0D,IAA1D,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cARG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAaH;;AAnDkC;;AAsDvC,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport '../styles/Calendar.css';\nimport leftArrow from '../images/arrow-left.png';\nimport rightArrow from '../images/arrow-right.png';\nimport leftDoubleArrow from '../images/arrow-double-left.png';\nimport rightDoubleArrow from '../images/arrow-double-right.png';\nimport { dateToDateObj, getMonthYear, getWeekDays, getLastMonthTotalDates, getCurrMonthTotalDates, getCurrMonthStartingDay, getNextMonthStartingDay, goToPrevYear, goToNextYear, goToPrevMonth, goToNextMonth, getDates} from '../utils/calendar';\nimport SingleDateCalendar from './SingleDateCalendar';\nimport { setDisplayConditions, filterDisplayEvents } from '../actions/displayArea';\nimport store from '../store';\n\nclass Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            markDate: dateToDateObj(new Date()),\n            activeDate: dateToDateObj(new Date())\n        }\n    }/*\n    async setActiveDate(date) {\n        let dateObj = this.state.markDate;\n        dateObj[2] = date;\n        await this.setState({\n            markDate: dateObj,\n            activeDate: dateObj,\n        });\n        await store.dispatch(setDisplayConditions({activeDate: dateObj}));\n        await store.dispatch(filterDisplayEvents(store.getState().allEvents.events));\n    }\n    getDates(markDate, activeDate) {\n        let arr = [];\n        let lastMonthTotalDates = getLastMonthTotalDates(markDate);\n        let currMonthTotalDates = getCurrMonthTotalDates(markDate);\n        let currMonthStartingDay = getCurrMonthStartingDay(markDate);\n        let nextMonthStartingDay = getNextMonthStartingDay(markDate);\n        for(let i = lastMonthTotalDates - currMonthStartingDay + 1; i <= lastMonthTotalDates; ++i) {\n            arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>)\n        }\n        for(let i = 1; i <= currMonthTotalDates; ++i) {\n            if(getMonthYear(markDate) === getMonthYear(activeDate) && i === activeDate[2]) arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'#dc4c3e'} fontColor={'white'} setActiveDate={this.setActiveDate.bind(this)}/>)\n            else arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'black'} setActiveDate={this.setActiveDate.bind(this)}/>)\n            \n        }\n        for(let i = 1; i <= 7 - nextMonthStartingDay; ++i) {\n            arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>);\n        }\n        return arr;\n    }*/\n    render() {\n        return <div id=\"calendar\">\n            <div id=\"calendar-interface\">\n                <img onClick={goToPrevYear.bind(this)} className=\"arrow left-double-arrow\" src={leftDoubleArrow} />\n                <img onClick={goToNextYear.bind(this)} className=\"arrow right-double-arrow\" src={rightDoubleArrow} />\n                <img onClick={goToPrevMonth.bind(this)} className=\"arrow left-arrow\" src={leftArrow} />\n                <img onClick={goToNextMonth.bind(this)} className=\"arrow right-arrow\" src={rightArrow} />\n                <span id=\"month\">{getMonthYear(this.state.markDate)}</span>\n            </div>\n            <div id=\"dates\">\n                {getWeekDays(false)}\n                {getDates(this.state.markDate, this.state.activeDate).bind(this)}\n            </div>\n                </div>;\n    }\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}