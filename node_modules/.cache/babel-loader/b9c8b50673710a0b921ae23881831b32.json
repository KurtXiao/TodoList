{"ast":null,"code":"var _jsxFileName = \"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AllLabels.js\";\nimport React from \"react\";\nimport '../styles/AllLabels.css';\nimport controlSign from '../images/control.png';\nimport addition from '../images/addition.png';\nimport labelSign from '../images/label.png';\nimport confirmSign from '../images/confirmOrange.png';\nimport SingleLabel from \"./SingleLabel\";\nimport store from \"../store\";\nimport { equalArrays } from \"../utils/redux\";\nimport { setState } from \"../actions/allEvents\";\nimport { updateState } from '../utils/server';\nimport { LABEL_ITEM, PROJECT_ITEM } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllLabels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayAddItem: 'none',\n      displayItems: 'none',\n      items: [],\n      name: ''\n    };\n  }\n\n  async componentDidMount() {\n    await store.subscribe(this.handleItemsChange.bind(this));\n  }\n\n  handleItemsChange() {\n    var _store$getState$allEv, _store$getState$allEv2;\n\n    let newItems;\n    if (this.props.type === LABEL_ITEM) newItems = (_store$getState$allEv = store.getState().allEvents) === null || _store$getState$allEv === void 0 ? void 0 : _store$getState$allEv.labels;else if (this.props.type === PROJECT_ITEM) newItems = (_store$getState$allEv2 = store.getState().allEvents) === null || _store$getState$allEv2 === void 0 ? void 0 : _store$getState$allEv2.projects;\n\n    if (newItems && !equalArrays(newItems, this.state.items)) {\n      this.setState({\n        items: [...newItems]\n      });\n    }\n  }\n\n  displayAddItem() {\n    this.setState({\n      displayAddItem: this.state.displayAddItem === 'none' ? 'block' : 'none'\n    });\n  }\n\n  displayItems() {\n    let displayVal = this.state.displayItems === 'none' ? 'block' : 'none';\n    if (this.state.items.length === 0) displayVal = 'none';\n    this.setState({\n      displayLabels: displayVal\n    });\n  }\n\n  getLabels(labels) {\n    let arr = [];\n\n    for (let i = 0; i < labels.length; ++i) {\n      arr.push( /*#__PURE__*/_jsxDEV(SingleLabel, {\n        name: labels[i]\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this));\n    }\n\n    return arr;\n  }\n\n  handleInputValue(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  async addLabel() {\n    if (this.state.name === '') {\n      alert('Label name must not be empty!');\n      return;\n    }\n\n    if (store.getState().allEvents.labels.indexOf(this.state.name) !== -1) {\n      alert('Repeated label!');\n      return;\n    }\n\n    let state = Object.assign({}, store.getState().allEvents);\n    state.labels.push(this.state.name);\n    await store.dispatch(setState(state));\n    this.setState({\n      displayAddLabel: 'none',\n      name: ''\n    });\n    updateState();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-controller\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addition\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"addition-arrow\",\n          src: controlSign,\n          onClick: this.displayLabels.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"addition-text\",\n          onClick: this.displayLabels.bind(this),\n          children: \"Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"addition-sign\",\n          src: addition,\n          onClick: this.displayAddLabel.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-label-wrapper\",\n        style: {\n          display: this.state.displayLabels\n        },\n        children: this.getLabels(this.state.labels)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-label\",\n        style: {\n          display: this.state.displayAddLabel\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"add-label-image\",\n          src: labelSign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.name,\n          className: \"add-label-name\",\n          onChange: this.handleInputValue.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"add-label-confirm\",\n          onClick: this.addLabel.bind(this),\n          src: confirmSign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AllLabels;","map":{"version":3,"sources":["/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AllLabels.js"],"names":["React","controlSign","addition","labelSign","confirmSign","SingleLabel","store","equalArrays","setState","updateState","LABEL_ITEM","PROJECT_ITEM","AllLabels","Component","constructor","props","state","displayAddItem","displayItems","items","name","componentDidMount","subscribe","handleItemsChange","bind","newItems","type","getState","allEvents","labels","projects","displayVal","length","displayLabels","getLabels","arr","i","push","Math","random","handleInputValue","e","target","value","addLabel","alert","indexOf","Object","assign","dispatch","displayAddLabel","render","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../styles/AllLabels.css';\nimport controlSign from '../images/control.png';\nimport addition from '../images/addition.png';\nimport labelSign from '../images/label.png';\nimport confirmSign from '../images/confirmOrange.png';\nimport SingleLabel from \"./SingleLabel\";\nimport store from \"../store\";\nimport { equalArrays } from \"../utils/redux\";\nimport { setState } from \"../actions/allEvents\";\nimport { updateState } from '../utils/server';\nimport { LABEL_ITEM, PROJECT_ITEM } from \"../utils/constants\";\n\nclass AllLabels extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayAddItem: 'none',\n            displayItems: 'none',\n            items: [],\n            name: '',\n        }\n    }\n    async componentDidMount() {\n        await store.subscribe(this.handleItemsChange.bind(this));\n    }\n    handleItemsChange() {\n        let newItems;\n        if(this.props.type === LABEL_ITEM) newItems = store.getState().allEvents?.labels;\n        else if(this.props.type === PROJECT_ITEM) newItems = store.getState().allEvents?.projects;\n        if(newItems && !equalArrays(newItems, this.state.items)) {\n            this.setState({\n                items: [...newItems]\n            })\n        }\n    }\n    displayAddItem() {\n        this.setState({\n            displayAddItem: this.state.displayAddItem === 'none' ? 'block' : 'none'\n        });\n    }\n    displayItems() {\n        let displayVal = this.state.displayItems === 'none' ? 'block' : 'none';\n        if(this.state.items.length === 0) displayVal = 'none';\n        this.setState({\n            displayLabels: displayVal\n        })\n    }\n    getLabels(labels) {\n        let arr = [];\n        for(let i = 0; i < labels.length; ++i) {\n            arr.push(<SingleLabel key={Math.random()} name={labels[i]}/>);\n        }\n        return arr;\n    }\n    handleInputValue(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n    async addLabel() {\n        if(this.state.name === '') {\n            alert('Label name must not be empty!');\n            return;\n        }\n        if(store.getState().allEvents.labels.indexOf(this.state.name) !== -1) {\n            alert('Repeated label!');\n            return;\n        }\n        let state = Object.assign({}, store.getState().allEvents);\n        state.labels.push(this.state.name);\n        await store.dispatch(setState(state));\n        this.setState({\n            displayAddLabel: 'none',\n            name: ''\n        });\n        updateState();\n    }\n    render() {\n        return <div className=\"label-controller\">\n            <div className=\"addition\">\n                <img className=\"addition-arrow\" src={controlSign} onClick={this.displayLabels.bind(this)}/>\n                <span className=\"addition-text\" onClick={this.displayLabels.bind(this)}>Labels</span>\n                <img className=\"addition-sign\" src={addition} onClick={this.displayAddLabel.bind(this)}/>\n            </div>\n            <div className=\"single-label-wrapper\" style={{display: this.state.displayLabels}}>\n                {this.getLabels(this.state.labels)}\n            </div>\n            <div className='add-label' style={{display: this.state.displayAddLabel}}>\n                <img className='add-label-image' src={labelSign}/>\n                <input value={this.state.name} className='add-label-name' onChange={this.handleInputValue.bind(this)}/>\n                <img className=\"add-label-confirm\" onClick={this.addLabel.bind(this)} src={confirmSign}/>\n            </div>\n        </div>;\n    }\n}\n\nexport default AllLabels;"]},"metadata":{},"sourceType":"module"}