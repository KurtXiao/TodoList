{"ast":null,"code":"var _jsxFileName = \"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/redux.js\";\nimport store from '../store';\nimport { setState } from '../actions/allEvents';\nimport SingleEvent from '../components/SingleEvent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function getState(str) {\n  if (str[0] !== '\"') return JSON.parse(str);\n  return JSON.parse(str.slice(1, -1));\n}\nexport function equalArrays(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every((val, idx) => val === arr2[idx]);\n}\nexport async function addEvent(title, text, activeDate, activeLabels, activeProjects, activePriority) {\n  let processedLabels = [];\n  let allLabels = store.getState().allEvents.labels;\n\n  for (let i = 0; i < activeLabels.length; ++i) {\n    if (allLabels.indexOf(activeLabels[i]) !== -1) processedLabels.push(activeLabels[i]);\n  }\n\n  let processedProjects = [];\n  let allProjects = store.getState().allEvents.projects;\n\n  for (let i = 0; i < activeProjects.length; ++i) {\n    if (allProjects.indexOf(activeProjects[i]) !== -1) processedProjects.push(activeProjects[i]);\n  }\n\n  let newEvent = {\n    title: title,\n    text: text,\n    activeDate: activeDate,\n    activeLabels: processedLabels,\n    activeProjects: processedProjects,\n    activePriority: activePriority\n  };\n  let state = JSON.parse(JSON.stringify(store.getState().allEvents));\n  state.events.push(newEvent);\n  await store.dispatch(setState(state));\n}\nexport function getDisplayEvents(eventsArr) {\n  let res = [];\n\n  for (let eventObj of eventsArr) {\n    res.push( /*#__PURE__*/_jsxDEV(SingleEvent, {\n      eventIndex: eventObj.eventIndex,\n      title: eventObj.title,\n      text: eventObj.text,\n      activeDate: [...eventObj.activeDate],\n      activeLabels: [...eventObj.activeLabels],\n      activeProjects: [...eventObj.activeProjects],\n      activePriority: eventObj.activePriority\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this));\n  }\n\n  return res;\n}\n\nfunction isSubArray(sourceArr, subArr) {\n  for (let i = 0; i < subArr.length; ++i) {\n    if (sourceArr.indexOf(subArr[i]) === -1) return false;\n  }\n\n  return true;\n}\n\nfunction fulfill(event, conditions) {\n  for (let i in conditions) {\n    if (i === 'activeDate') {\n      if (!equalArrays(event.activeDate, conditions[i])) return false;\n    } else if (i === 'activeLabels') {\n      if (!isSubArray(event.activeLabels, conditions[i])) return false;\n    } else if (i === 'activeProjects') {\n      if (!isSubArray(event.activeProjects, conditions[i])) return false;\n    } else if (i === 'activePriority') {\n      if (event.activePriority !== conditions[i]) return false;\n    }\n  }\n\n  return true;\n}\n\nexport function filterEvents(conditions, allEvents) {\n  let res = [];\n  let sourceEvents = [...allEvents];\n  let length = sourceEvents.length;\n\n  for (let i = 0; i < length; ++i) {\n    if (fulfill(sourceEvents[i], conditions)) {\n      let tmp = Object.assign({}, sourceEvents[i]);\n      tmp.eventIndex = i;\n      res.push(tmp);\n    }\n  }\n\n  return res;\n}","map":{"version":3,"sources":["/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/redux.js"],"names":["store","setState","SingleEvent","getState","str","JSON","parse","slice","equalArrays","arr1","arr2","length","every","val","idx","addEvent","title","text","activeDate","activeLabels","activeProjects","activePriority","processedLabels","allLabels","allEvents","labels","i","indexOf","push","processedProjects","allProjects","projects","newEvent","state","stringify","events","dispatch","getDisplayEvents","eventsArr","res","eventObj","eventIndex","Math","random","isSubArray","sourceArr","subArr","fulfill","event","conditions","filterEvents","sourceEvents","tmp","Object","assign"],"mappings":"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","sourcesContent":["import store from '../store';\nimport { setState } from '../actions/allEvents';\nimport SingleEvent from '../components/SingleEvent';\n\nexport function getState(str) {\n    if(str[0] !== '\"') return JSON.parse(str);\n    return JSON.parse(str.slice(1, -1));\n}\n\nexport function equalArrays(arr1, arr2) {\n    return arr1.length === arr2.length && arr1.every((val, idx) => val === arr2[idx]);\n}\n\nexport async function addEvent(title, text, activeDate, activeLabels, activeProjects, activePriority) {\n    let processedLabels = [];\n    let allLabels = store.getState().allEvents.labels;\n    for(let i = 0; i < activeLabels.length; ++i) {\n        if(allLabels.indexOf(activeLabels[i]) !== -1) processedLabels.push(activeLabels[i]);\n    }\n    let processedProjects = [];\n    let allProjects = store.getState().allEvents.projects;\n    for(let i = 0; i < activeProjects.length; ++i) {\n        if(allProjects.indexOf(activeProjects[i]) !== -1) processedProjects.push(activeProjects[i]);\n    }\n    let newEvent = {\n        title: title,\n        text: text,\n        activeDate: activeDate,\n        activeLabels: processedLabels,\n        activeProjects: processedProjects,\n        activePriority: activePriority,\n    }\n    let state = JSON.parse(JSON.stringify(store.getState().allEvents));\n    state.events.push(newEvent);\n    await store.dispatch(setState(state));\n}\n\nexport function getDisplayEvents(eventsArr) {\n    let res = [];\n    for(let eventObj of eventsArr) {\n        res.push(<SingleEvent \n            key={Math.random()}\n            eventIndex={eventObj.eventIndex} \n            title={eventObj.title} \n            text={eventObj.text} \n            activeDate={[...eventObj.activeDate]}\n            activeLabels={[...eventObj.activeLabels]}\n            activeProjects={[...eventObj.activeProjects]}\n            activePriority={eventObj.activePriority}/>)\n    }\n\n    return res;\n}\n\nfunction isSubArray(sourceArr, subArr) {\n    for(let i = 0; i < subArr.length; ++i) {\n        if(sourceArr.indexOf(subArr[i]) === -1) return false;\n    }\n    return true;\n}\n\nfunction fulfill(event, conditions) {\n    for(let i in conditions) {\n        if(i === 'activeDate') {\n            if(!equalArrays(event.activeDate, conditions[i])) return false;\n        }\n        else if(i === 'activeLabels') {\n            if(!isSubArray(event.activeLabels, conditions[i])) return false;\n        }\n        else if(i === 'activeProjects') {\n            if(!isSubArray(event.activeProjects, conditions[i])) return false;\n        }\n        else if(i === 'activePriority') {\n            if(event.activePriority !== conditions[i]) return false;\n        }\n    }\n    return true;\n}\n\nexport function filterEvents(conditions, allEvents) {\n    let res = [];\n    let sourceEvents = [...allEvents];\n    let length = sourceEvents.length;\n    for(let i = 0; i < length; ++i) {\n        if(fulfill(sourceEvents[i], conditions)) {\n            let tmp = Object.assign({}, sourceEvents[i]);\n            tmp.eventIndex = i;\n            res.push(tmp);\n        }\n    }\n    return res;\n}"]},"metadata":{},"sourceType":"module"}