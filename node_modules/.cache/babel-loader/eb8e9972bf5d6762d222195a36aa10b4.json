{"ast":null,"code":"var _jsxFileName = \"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AllLabels.js\";\nimport React from \"react\";\nimport '../styles/AllLabels.css';\nimport controlSign from '../images/control.png';\nimport addition from '../images/addition.png';\nimport labelSign from '../images/label.png';\nimport confirmSign from '../images/confirmOrange.png';\nimport SingleLabel from \"./SingleLabel\";\nimport store from \"../store\";\nimport { equalArrays } from \"../utils/redux\";\nimport { setState } from \"../actions/allEvents\";\nimport { updateState } from '../utils/server';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllLabels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayAddLabel: 'none',\n      displayLabels: 'none',\n      labels: [],\n      name: ''\n    };\n  }\n\n  async componentDidMount() {\n    await store.subscribe(this.handleLabelsChange.bind(this));\n  }\n\n  handleLabelsChange() {\n    var _store$getState$allEv;\n\n    let newLabels = (_store$getState$allEv = store.getState().allEvents) === null || _store$getState$allEv === void 0 ? void 0 : _store$getState$allEv.labels;\n\n    if (newLabels && !equalArrays(newLabels, this.state.labels)) {\n      this.setState({\n        labels: [...newLabels]\n      });\n    }\n  }\n\n  displayAddLabel() {\n    this.setState({\n      displayAddLabel: this.state.displayAddLabel === 'none' ? 'block' : 'none'\n    });\n  }\n\n  displayLabels() {\n    let displayVal = this.state.displayLabels === 'none' ? 'block' : 'none';\n    if (this.state.labels.length === 0) displayVal = 'none';\n    this.setState({\n      displayLabels: displayVal\n    });\n  }\n\n  getLabels(labels) {\n    let arr = [];\n\n    for (let i = 0; i < labels.length; ++i) {\n      arr.push( /*#__PURE__*/_jsxDEV(SingleLabel, {\n        name: labels[i]\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this));\n    }\n\n    return arr;\n  }\n\n  handleInputValue(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  async addLabel() {\n    if (this.state.name === '') {\n      alert('Label name must not be empty!');\n      return;\n    }\n\n    if (store.getState().allEvents.labels.indexOf(this.state.name) !== -1) {\n      alert('Repeated label!');\n      return;\n    }\n\n    let state = Object.assign({}, store.getState().allEvents);\n    state.labels.push(this.state.name);\n    await store.dispatch(setState(state));\n    this.setState({\n      displayAddLabel: 'none',\n      name: ''\n    });\n    updateState();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-controller\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addition\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"addition-arrow\",\n          src: controlSign,\n          onClick: this.displayLabels.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"addition-text\",\n          onClick: this.displayLabels.bind(this),\n          children: \"Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"addition-sign\",\n          src: addition,\n          onClick: this.displayAddLabel.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-label-wrapper\",\n        style: {\n          display: this.state.displayLabels,\n          height: this.state.testH,\n          transition: this.state.testT\n        },\n        children: this.getLabels(this.state.labels)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-label\",\n        style: {\n          display: this.state.displayAddLabel\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"add-label-image\",\n          src: labelSign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.name,\n          className: \"add-label-name\",\n          onChange: this.handleInputValue.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"add-label-confirm\",\n          onClick: this.addLabel.bind(this),\n          src: confirmSign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AllLabels;","map":{"version":3,"sources":["/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AllLabels.js"],"names":["React","controlSign","addition","labelSign","confirmSign","SingleLabel","store","equalArrays","setState","updateState","AllLabels","Component","constructor","props","state","displayAddLabel","displayLabels","labels","name","componentDidMount","subscribe","handleLabelsChange","bind","newLabels","getState","allEvents","displayVal","length","getLabels","arr","i","push","Math","random","handleInputValue","e","target","value","addLabel","alert","indexOf","Object","assign","dispatch","render","display","height","testH","transition","testT"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../styles/AllLabels.css';\nimport controlSign from '../images/control.png';\nimport addition from '../images/addition.png';\nimport labelSign from '../images/label.png';\nimport confirmSign from '../images/confirmOrange.png';\nimport SingleLabel from \"./SingleLabel\";\nimport store from \"../store\";\nimport { equalArrays } from \"../utils/redux\";\nimport { setState } from \"../actions/allEvents\";\nimport { updateState } from '../utils/server';\n\n\nclass AllLabels extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayAddLabel: 'none',\n            displayLabels: 'none',\n            labels: [],\n            name: '',\n        }\n    }\n    async componentDidMount() {\n        await store.subscribe(this.handleLabelsChange.bind(this));\n    }\n    handleLabelsChange() {\n        let newLabels = store.getState().allEvents?.labels;\n        if(newLabels && !equalArrays(newLabels, this.state.labels)) {\n            this.setState({\n                labels: [...newLabels]\n            })\n        }\n    }\n    displayAddLabel() {\n        this.setState({\n            displayAddLabel: this.state.displayAddLabel === 'none' ? 'block' : 'none'\n        });\n    }\n    displayLabels() {\n        let displayVal = this.state.displayLabels === 'none' ? 'block' : 'none';\n        if(this.state.labels.length === 0) displayVal = 'none';\n        this.setState({\n            displayLabels: displayVal\n        })\n    }\n    getLabels(labels) {\n        let arr = [];\n        for(let i = 0; i < labels.length; ++i) {\n            arr.push(<SingleLabel key={Math.random()} name={labels[i]}/>);\n        }\n        return arr;\n    }\n    handleInputValue(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n    async addLabel() {\n        if(this.state.name === '') {\n            alert('Label name must not be empty!');\n            return;\n        }\n        if(store.getState().allEvents.labels.indexOf(this.state.name) !== -1) {\n            alert('Repeated label!');\n            return;\n        }\n        let state = Object.assign({}, store.getState().allEvents);\n        state.labels.push(this.state.name);\n        await store.dispatch(setState(state));\n        this.setState({\n            displayAddLabel: 'none',\n            name: ''\n        });\n        updateState();\n    }\n    render() {\n        return <div className=\"label-controller\">\n            <div className=\"addition\">\n                <img className=\"addition-arrow\" src={controlSign} onClick={this.displayLabels.bind(this)}/>\n                <span className=\"addition-text\" onClick={this.displayLabels.bind(this)}>Labels</span>\n                <img className=\"addition-sign\" src={addition} onClick={this.displayAddLabel.bind(this)}/>\n            </div>\n            <div className=\"single-label-wrapper\" style={{display: this.state.displayLabels, height: this.state.testH, transition: this.state.testT}}>\n                {this.getLabels(this.state.labels)}\n            </div>\n            <div className='add-label' style={{display: this.state.displayAddLabel}}>\n                <img className='add-label-image' src={labelSign}/>\n                <input value={this.state.name} className='add-label-name' onChange={this.handleInputValue.bind(this)}/>\n                <img className=\"add-label-confirm\" onClick={this.addLabel.bind(this)} src={confirmSign}/>\n            </div>\n        </div>;\n    }\n}\n\nexport default AllLabels;"]},"metadata":{},"sourceType":"module"}