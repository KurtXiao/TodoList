{"ast":null,"code":"var _jsxFileName = \"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/calendar.js\";\nimport SingleDateCalendar from \"../components/SingleDateCalendar\";\nimport SingleDateEventCalendar from \"../components/SingleDateEventCalendar\";\nimport SingleDateAddEvent from '../components/SingleDateAddEvent';\nimport { SINGLE_DATE_CALENDAR, SINGLE_DATE_ADD_EVENT, SINGLE_DATE_EVENT_CALENDAR } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport function monthIndexToMonth(monthIndex) {\n  return months[monthIndex];\n}\nexport function monthToMonthIndex(month) {\n  return months.indexOf(month);\n}\nexport function dateToDateObj(date) {\n  if (!date) date = new Date();\n  return [date.getMonth(), date.getFullYear(), date.getDate()];\n}\nexport function dateObjToDate(dateObj) {\n  if (!dateObj) return new Date();\n  return new Date(dateObj[1], dateObj[0], dateObj[2]);\n}\nexport function getPreviousMonthDateObj(dateObj) {\n  let newDateObj = [...dateObj];\n\n  if (newDateObj[0] === 0) {\n    newDateObj[0] = 11;\n    newDateObj[1] -= 1;\n    newDateObj[2] = 1;\n  } else {\n    newDateObj[0] -= 1;\n    newDateObj[2] = 1;\n  }\n\n  return newDateObj;\n}\nexport function getNextMonthDateObj(dateObj) {\n  let newDateObj = [...dateObj];\n\n  if (newDateObj[0] === 11) {\n    newDateObj[0] = 0;\n    newDateObj[1] += 1;\n    newDateObj[2] = 1;\n  } else {\n    newDateObj[0] += 1;\n    newDateObj[2] = 1;\n  }\n\n  return newDateObj;\n}\nexport function getPreviousYearDateObj(dateObj) {\n  let newDateObj = [...dateObj];\n  newDateObj[1] -= 1;\n  newDateObj[2] = 1;\n  return newDateObj;\n}\nexport function getNextYearDateObj(dateObj) {\n  let newDateObj = [...dateObj];\n  newDateObj[1] += 1;\n  newDateObj[2] = 1;\n  return newDateObj;\n}\nexport function getMonthYear(dateObj) {\n  return monthIndexToMonth(dateObj[0]) + ' ' + dateObj[1].toString();\n}\nexport function getWeekDays(event) {\n  if (event) {\n    return [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'grid-cell-event-calendar',\n      children: \"S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'grid-cell-event-calendar',\n      children: \"M\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'grid-cell-event-calendar',\n      children: \"T\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'grid-cell-event-calendar',\n      children: \"W\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'grid-cell-event-calendar',\n      children: \"T\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'grid-cell-event-calendar',\n      children: \"F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'grid-cell-event-calendar',\n      children: \"S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)];\n  }\n\n  return [/*#__PURE__*/_jsxDEV(\"span\", {\n    className: 'grid-cell',\n    children: \"SUN\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: 'grid-cell',\n    children: \"MON\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: 'grid-cell',\n    children: \"TUE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: 'grid-cell',\n    children: \"WED\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: 'grid-cell',\n    children: \"THU\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: 'grid-cell',\n    children: \"FRI\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: 'grid-cell',\n    children: \"SAT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this)];\n}\nexport function getLastMonthTotalDates(dateObj) {\n  let date = dateObjToDate(dateObj);\n  date.setDate(0);\n  return date.getDate();\n}\nexport function getCurrMonthTotalDates(dateObj) {\n  let date = dateObjToDate(dateObj);\n  date.setMonth(date.getMonth() + 1);\n  date.setDate(0);\n  return date.getDate();\n}\nexport function getCurrMonthStartingDay(dateObj) {\n  let date = dateObjToDate(dateObj);\n  date.setDate(1);\n  return date.getDay();\n}\nexport function getNextMonthStartingDay(dateObj) {\n  let nextMonthDateObj = getNextMonthDateObj(dateObj);\n  return getCurrMonthStartingDay(nextMonthDateObj);\n}","map":{"version":3,"sources":["/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/calendar.js"],"names":["SingleDateCalendar","SingleDateEventCalendar","SingleDateAddEvent","SINGLE_DATE_CALENDAR","SINGLE_DATE_ADD_EVENT","SINGLE_DATE_EVENT_CALENDAR","months","monthIndexToMonth","monthIndex","monthToMonthIndex","month","indexOf","dateToDateObj","date","Date","getMonth","getFullYear","getDate","dateObjToDate","dateObj","getPreviousMonthDateObj","newDateObj","getNextMonthDateObj","getPreviousYearDateObj","getNextYearDateObj","getMonthYear","toString","getWeekDays","event","getLastMonthTotalDates","setDate","getCurrMonthTotalDates","setMonth","getCurrMonthStartingDay","getDay","getNextMonthStartingDay","nextMonthDateObj"],"mappings":"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","sourcesContent":["import SingleDateCalendar from \"../components/SingleDateCalendar\";\nimport SingleDateEventCalendar from \"../components/SingleDateEventCalendar\";\nimport SingleDateAddEvent from '../components/SingleDateAddEvent';\nimport { SINGLE_DATE_CALENDAR, SINGLE_DATE_ADD_EVENT, SINGLE_DATE_EVENT_CALENDAR } from '../utils/constants';\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nexport function monthIndexToMonth(monthIndex) {\n    return months[monthIndex];\n}\n\nexport function monthToMonthIndex(month) {\n    return months.indexOf(month);\n}\n\nexport function dateToDateObj(date) {\n    if(!date) date = new Date();\n    return [date.getMonth(), date.getFullYear(), date.getDate()];\n}\n\nexport function dateObjToDate(dateObj) {\n    if(!dateObj) return new Date();\n    return new Date(dateObj[1], dateObj[0], dateObj[2]);\n}\n\nexport function getPreviousMonthDateObj(dateObj) {\n    let newDateObj = [...dateObj];\n    if(newDateObj[0] === 0) {\n        newDateObj[0] = 11;\n        newDateObj[1] -= 1;\n        newDateObj[2] = 1;\n    }\n    else {\n        newDateObj[0] -= 1;\n        newDateObj[2] = 1;\n    }\n    return newDateObj;\n}\n\nexport function getNextMonthDateObj(dateObj) {\n    let newDateObj = [...dateObj];\n    if(newDateObj[0] === 11) {\n        newDateObj[0] = 0;\n        newDateObj[1] += 1;\n        newDateObj[2] = 1;\n    }\n    else {\n        newDateObj[0] += 1;\n        newDateObj[2] = 1;\n    }\n    return newDateObj;\n}\n\nexport function getPreviousYearDateObj(dateObj) {\n    let newDateObj = [...dateObj];\n    newDateObj[1] -= 1;\n    newDateObj[2] = 1;\n    return newDateObj;\n}\n\nexport function getNextYearDateObj(dateObj) {\n    let newDateObj = [...dateObj];\n    newDateObj[1] += 1;\n    newDateObj[2] = 1;\n    return newDateObj;\n}\n\nexport function getMonthYear(dateObj) {\n    return monthIndexToMonth(dateObj[0]) + ' ' + dateObj[1].toString();\n}\n\nexport function getWeekDays(event) {\n    if(event) {\n        return [\n            <span className={'grid-cell-event-calendar'}>S</span>,\n            <span className={'grid-cell-event-calendar'}>M</span>,\n            <span className={'grid-cell-event-calendar'}>T</span>,\n            <span className={'grid-cell-event-calendar'}>W</span>,\n            <span className={'grid-cell-event-calendar'}>T</span>,\n            <span className={'grid-cell-event-calendar'}>F</span>,\n            <span className={'grid-cell-event-calendar'}>S</span>,\n        ]\n    }\n    return [\n        <span className={'grid-cell'}>SUN</span>,\n        <span className={'grid-cell'}>MON</span>,\n        <span className={'grid-cell'}>TUE</span>,\n        <span className={'grid-cell'}>WED</span>,\n        <span className={'grid-cell'}>THU</span>,\n        <span className={'grid-cell'}>FRI</span>,\n        <span className={'grid-cell'}>SAT</span>,\n    ];\n}\n\nexport function getLastMonthTotalDates(dateObj) {\n    let date = dateObjToDate(dateObj);\n    date.setDate(0);\n    return date.getDate();\n}\n\nexport function getCurrMonthTotalDates(dateObj) {\n    let date = dateObjToDate(dateObj);\n    date.setMonth(date.getMonth() + 1);\n    date.setDate(0);\n    return date.getDate();\n}\n\nexport function getCurrMonthStartingDay(dateObj) {\n    let date = dateObjToDate(dateObj);\n    date.setDate(1);\n    return date.getDay();\n}\n\nexport function getNextMonthStartingDay(dateObj) {\n    let nextMonthDateObj = getNextMonthDateObj(dateObj);\n    return getCurrMonthStartingDay(nextMonthDateObj);\n}"]},"metadata":{},"sourceType":"module"}