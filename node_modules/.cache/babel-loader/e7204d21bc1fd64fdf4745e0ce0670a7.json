{"ast":null,"code":"var _jsxFileName = \"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventCalendar.js\";\nimport React from 'react';\nimport '../styles/EventCalendar.css';\nimport leftArrow from '../images/arrow-left.png';\nimport rightArrow from '../images/arrow-right.png';\nimport leftDoubleArrow from '../images/arrow-double-left.png';\nimport rightDoubleArrow from '../images/arrow-double-right.png';\nimport { getMonthYear, getWeekDays, getLastMonthTotalDates, getCurrMonthTotalDates, getCurrMonthStartingDay, getNextMonthStartingDay } from '../utils/calendar';\nimport SingleDateEventCalendar from './SingleDateEventCalendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EventCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getDates(markDate, activeDate) {\n    let arr = [];\n    let lastMonthTotalDates = getLastMonthTotalDates(markDate);\n    let currMonthTotalDates = getCurrMonthTotalDates(markDate);\n    let currMonthStartingDay = getCurrMonthStartingDay(markDate);\n    let nextMonthStartingDay = getNextMonthStartingDay(markDate);\n\n    for (let i = lastMonthTotalDates - currMonthStartingDay + 1; i <= lastMonthTotalDates; ++i) {\n      arr.push( /*#__PURE__*/_jsxDEV(SingleDateEventCalendar, {\n        date: i,\n        backgroundColor: 'transparent',\n        fontColor: 'grey',\n        setActiveDate: () => {}\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 22\n      }, this));\n    }\n\n    for (let i = 1; i <= currMonthTotalDates; ++i) {\n      if (getMonthYear(markDate) === getMonthYear(activeDate) && i === activeDate[2]) arr.push( /*#__PURE__*/_jsxDEV(SingleDateEventCalendar, {\n        date: i,\n        backgroundColor: '#dc4c3e',\n        fontColor: 'white',\n        setActiveDate: this.props.setActiveDate\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 101\n      }, this));else arr.push( /*#__PURE__*/_jsxDEV(SingleDateEventCalendar, {\n        date: i,\n        backgroundColor: 'transparent',\n        fontColor: 'black',\n        setActiveDate: this.props.setActiveDate\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }, this));\n    }\n\n    for (let i = 1; i <= 7 - nextMonthStartingDay; ++i) {\n      arr.push( /*#__PURE__*/_jsxDEV(SingleDateEventCalendar, {\n        date: i,\n        backgroundColor: 'transparent',\n        fontColor: 'grey',\n        setActiveDate: () => {}\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }, this));\n    }\n\n    return arr;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-calendar\",\n      style: {\n        display: this.props.display\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-calendar-interface\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: this.props.goToPrevYear,\n          className: \"arrow left-double-arrow\",\n          src: leftDoubleArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: this.props.goToNextYear,\n          className: \"arrow right-double-arrow\",\n          src: rightDoubleArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: this.props.goToPrevMonth,\n          className: \"arrow left-arrow\",\n          src: leftArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: this.props.goToNextMonth,\n          className: \"arrow right-arrow\",\n          src: rightArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"event-calendar-month\",\n          children: getMonthYear(this.props.markDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-calendar-dates\",\n        children: [getWeekDays(true), this.getDates(this.props.markDate, this.props.activeDate)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, Math.random(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default EventCalendar;","map":{"version":3,"sources":["/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventCalendar.js"],"names":["React","leftArrow","rightArrow","leftDoubleArrow","rightDoubleArrow","getMonthYear","getWeekDays","getLastMonthTotalDates","getCurrMonthTotalDates","getCurrMonthStartingDay","getNextMonthStartingDay","SingleDateEventCalendar","EventCalendar","Component","constructor","props","getDates","markDate","activeDate","arr","lastMonthTotalDates","currMonthTotalDates","currMonthStartingDay","nextMonthStartingDay","i","push","Math","random","setActiveDate","render","display","goToPrevYear","goToNextYear","goToPrevMonth","goToNextMonth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../styles/EventCalendar.css';\nimport leftArrow from '../images/arrow-left.png';\nimport rightArrow from '../images/arrow-right.png';\nimport leftDoubleArrow from '../images/arrow-double-left.png';\nimport rightDoubleArrow from '../images/arrow-double-right.png';\nimport { getMonthYear, getWeekDays, getLastMonthTotalDates, getCurrMonthTotalDates, getCurrMonthStartingDay, getNextMonthStartingDay} from '../utils/calendar';\nimport SingleDateEventCalendar from './SingleDateEventCalendar';\n\nclass EventCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    getDates(markDate, activeDate) {\n        let arr = [];\n        let lastMonthTotalDates = getLastMonthTotalDates(markDate);\n        let currMonthTotalDates = getCurrMonthTotalDates(markDate);\n        let currMonthStartingDay = getCurrMonthStartingDay(markDate);\n        let nextMonthStartingDay = getNextMonthStartingDay(markDate);\n        for(let i = lastMonthTotalDates - currMonthStartingDay + 1; i <= lastMonthTotalDates; ++i) {\n            arr.push(<SingleDateEventCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>)\n        }\n        for(let i = 1; i <= currMonthTotalDates; ++i) {\n            if(getMonthYear(markDate) === getMonthYear(activeDate) && i === activeDate[2]) arr.push(<SingleDateEventCalendar key={Math.random()} date={i} backgroundColor={'#dc4c3e'} fontColor={'white'} setActiveDate={this.props.setActiveDate}/>)\n            else arr.push(<SingleDateEventCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'black'} setActiveDate={this.props.setActiveDate}/>)\n        }\n        for(let i = 1; i <= 7 - nextMonthStartingDay; ++i) {\n            arr.push(<SingleDateEventCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>);\n        }\n        return arr;\n    }\n    render() {\n        return <div className='event-calendar' style={{display: this.props.display}} key={Math.random()}>\n        <div className=\"event-calendar-interface\">\n            <img onClick={this.props.goToPrevYear} className=\"arrow left-double-arrow\" src={leftDoubleArrow} />\n            <img onClick={this.props.goToNextYear} className=\"arrow right-double-arrow\" src={rightDoubleArrow} />\n            <img onClick={this.props.goToPrevMonth} className=\"arrow left-arrow\" src={leftArrow} />\n            <img onClick={this.props.goToNextMonth} className=\"arrow right-arrow\" src={rightArrow} />\n            <span className=\"event-calendar-month\">{getMonthYear(this.props.markDate)}</span>\n        </div>\n        <div className=\"event-calendar-dates\">\n            {getWeekDays(true)}\n            {this.getDates(this.props.markDate, this.props.activeDate)}\n        </div>\n            </div>;\n    }\n}\n\nexport default EventCalendar;"]},"metadata":{},"sourceType":"module"}