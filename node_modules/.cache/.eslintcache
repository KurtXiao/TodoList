[{"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/index.js":"1","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Interface.js":"2","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Home.js":"3","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/store.js":"4","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Display.js":"5","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Project.js":"6","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Calendar.js":"7","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Control.js":"8","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/calendar.js":"9","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/server.js":"10","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/redux.js":"11","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/projectArea.js":"12","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/userInfo.js":"13","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/constants.js":"14","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/allEvents.js":"15","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/displayArea.js":"16","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SelectProject.js":"17","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleDateCalendar.js":"18","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AllLabels.js":"19","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AllProjects.js":"20","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEvent.js":"21","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Filter.js":"22","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleEvent.js":"23","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleDateAddEvent.js":"24","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleDateEventCalendar.js":"25","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/index.js":"26","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/actionTypes.js":"27","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEventCalendar.js":"28","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleProjectSelection.js":"29","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleProject.js":"30","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleLabel.js":"31","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEventLabelSelection.js":"32","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEventProjectSelection.js":"33","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEventPrioritySelection.js":"34","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/projectArea.js":"35","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventCalendar.js":"36","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventProjectSelection.js":"37","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/displayArea.js":"38","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventLabelSelection.js":"39","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventPrioritySelection.js":"40","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/userInfo.js":"41","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/allEvents.js":"42"},{"size":429,"mtime":1641168515675,"results":"43","hashOfConfig":"44"},{"size":1404,"mtime":1642017532423,"results":"45","hashOfConfig":"44"},{"size":2534,"mtime":1642054867060,"results":"46","hashOfConfig":"44"},{"size":142,"mtime":1640744477520,"results":"47","hashOfConfig":"44"},{"size":878,"mtime":1642053297364,"results":"48","hashOfConfig":"44"},{"size":885,"mtime":1642053337380,"results":"49","hashOfConfig":"44"},{"size":4042,"mtime":1642022979329,"results":"50","hashOfConfig":"44"},{"size":571,"mtime":1641999209125,"results":"51","hashOfConfig":"44"},{"size":3481,"mtime":1642053409153,"results":"52","hashOfConfig":"44"},{"size":399,"mtime":1642560815775,"results":"53","hashOfConfig":"44"},{"size":3031,"mtime":1642053286673,"results":"54","hashOfConfig":"44"},{"size":395,"mtime":1641959016666,"results":"55","hashOfConfig":"44"},{"size":199,"mtime":1641189062133,"results":"56","hashOfConfig":"44"},{"size":334,"mtime":1642561764063,"results":"57","hashOfConfig":"44"},{"size":337,"mtime":1641956658956,"results":"58","hashOfConfig":"44"},{"size":410,"mtime":1641944428245,"results":"59","hashOfConfig":"44"},{"size":1930,"mtime":1642092314377,"results":"60","hashOfConfig":"44"},{"size":1069,"mtime":1642031755240,"results":"61","hashOfConfig":"44"},{"size":3407,"mtime":1642092211674,"results":"62","hashOfConfig":"44"},{"size":3459,"mtime":1642092267104,"results":"63","hashOfConfig":"44"},{"size":11350,"mtime":1642092294719,"results":"64","hashOfConfig":"44"},{"size":9998,"mtime":1642092395014,"results":"65","hashOfConfig":"44"},{"size":9634,"mtime":1642026601547,"results":"66","hashOfConfig":"44"},{"size":466,"mtime":1642055101351,"results":"67","hashOfConfig":"44"},{"size":1109,"mtime":1642026927701,"results":"68","hashOfConfig":"44"},{"size":303,"mtime":1642054938442,"results":"69","hashOfConfig":"44"},{"size":333,"mtime":1642055038378,"results":"70","hashOfConfig":"44"},{"size":1384,"mtime":1642055025157,"results":"71","hashOfConfig":"44"},{"size":801,"mtime":1641959078738,"results":"72","hashOfConfig":"44"},{"size":1004,"mtime":1642050772695,"results":"73","hashOfConfig":"44"},{"size":976,"mtime":1642048843913,"results":"74","hashOfConfig":"44"},{"size":1368,"mtime":1642051600034,"results":"75","hashOfConfig":"44"},{"size":1378,"mtime":1641999936474,"results":"76","hashOfConfig":"44"},{"size":1340,"mtime":1641998770267,"results":"77","hashOfConfig":"44"},{"size":674,"mtime":1641959074876,"results":"78","hashOfConfig":"44"},{"size":2889,"mtime":1642026988500,"results":"79","hashOfConfig":"44"},{"size":1391,"mtime":1641999963072,"results":"80","hashOfConfig":"44"},{"size":690,"mtime":1641944826075,"results":"81","hashOfConfig":"44"},{"size":1399,"mtime":1642028982173,"results":"82","hashOfConfig":"44"},{"size":1290,"mtime":1641999926604,"results":"83","hashOfConfig":"44"},{"size":288,"mtime":1641189096811,"results":"84","hashOfConfig":"44"},{"size":491,"mtime":1641956961034,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vc9du0",{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/index.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Interface.js",["188"],"import React from 'react';\nimport '../styles/Interface.css';\nimport Calendar from './Calendar';\nimport Display from './Display';\nimport Project from './Project';\nimport Control from './Control';\nimport store from '../store';\nimport { getState } from '../utils/redux';\nimport { postToServer } from '../utils/server';\nimport { setState } from '../actions/allEvents';\nimport { selectProject, filterProject } from '../actions/projectArea';\nimport { setDisplayConditions, filterDisplayEvents } from '../actions/displayArea';\nimport { dateToDateObj } from '../utils/calendar';\n\nclass Interface extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  async componentDidMount() {\n    let res = await postToServer('/getState', {username: store.getState().userInfo.username});\n    await store.dispatch(setState(getState(res)));\n    await store.dispatch(selectProject(store.getState().allEvents.projects[0] || \"\"));\n    await store.dispatch(filterProject(store.getState().allEvents.events));\n    await store.dispatch(setDisplayConditions({activeDate: dateToDateObj(new Date())}));\n    await store.dispatch(filterDisplayEvents(store.getState().allEvents.events));\n  }\n  render() {\n    return <div>\n      <div id='calendar-container'><Calendar/></div>\n      <div id=\"flex-container\">\n        <Display />\n        <Project />\n        <Control />\n      </div>\n    </div>\n  }\n}\n\nexport default Interface;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Home.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/store.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Display.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Project.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Calendar.js",["189","190","191","192"],"import React from 'react';\nimport '../styles/Calendar.css';\nimport leftArrow from '../images/arrow-left.png';\nimport rightArrow from '../images/arrow-right.png';\nimport leftDoubleArrow from '../images/arrow-double-left.png';\nimport rightDoubleArrow from '../images/arrow-double-right.png';\nimport { dateToDateObj, getMonthYear, getWeekDays, getPreviousMonthDateObj, getNextMonthDateObj, getPreviousYearDateObj, getNextYearDateObj, getLastMonthTotalDates, getCurrMonthTotalDates, getCurrMonthStartingDay, getNextMonthStartingDay} from '../utils/calendar';\nimport SingleDateCalendar from './SingleDateCalendar';\nimport { setDisplayConditions, filterDisplayEvents } from '../actions/displayArea';\nimport store from '../store';\n\nclass Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            markDate: dateToDateObj(new Date()),\n            activeDate: dateToDateObj(new Date())\n        }\n    }\n    goToPrevYear() {\n        this.setState({\n            markDate: getPreviousYearDateObj(this.state.markDate)\n        })\n    }\n    goToNextYear() {\n        this.setState({\n            markDate: getNextYearDateObj(this.state.markDate)\n        })\n    }\n    goToPrevMonth() {\n        this.setState({\n            markDate: getPreviousMonthDateObj(this.state.markDate)\n        })\n    }\n    goToNextMonth() {\n        this.setState({\n            markDate: getNextMonthDateObj(this.state.markDate)\n        })\n    }\n    async setActiveDate(date) {\n        let dateObj = this.state.markDate;\n        dateObj[2] = date;\n        await this.setState({\n            markDate: dateObj,\n            activeDate: dateObj,\n        });\n        await store.dispatch(setDisplayConditions({activeDate: dateObj}));\n        await store.dispatch(filterDisplayEvents(store.getState().allEvents.events));\n    }\n    getDates(markDate, activeDate) {\n        let arr = [];\n        let lastMonthTotalDates = getLastMonthTotalDates(markDate);\n        let currMonthTotalDates = getCurrMonthTotalDates(markDate);\n        let currMonthStartingDay = getCurrMonthStartingDay(markDate);\n        let nextMonthStartingDay = getNextMonthStartingDay(markDate);\n        for(let i = lastMonthTotalDates - currMonthStartingDay + 1; i <= lastMonthTotalDates; ++i) {\n            arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>)\n        }\n        for(let i = 1; i <= currMonthTotalDates; ++i) {\n            if(getMonthYear(markDate) === getMonthYear(activeDate) && i === activeDate[2]) arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'#dc4c3e'} fontColor={'white'} setActiveDate={this.setActiveDate.bind(this)}/>)\n            else arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'black'} setActiveDate={this.setActiveDate.bind(this)}/>)\n            \n        }\n        for(let i = 1; i <= 7 - nextMonthStartingDay; ++i) {\n            arr.push(<SingleDateCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>);\n        }\n        return arr;\n    }\n    render() {\n        return <div id=\"calendar\">\n            <div id=\"calendar-interface\">\n                <img onClick={this.goToPrevYear.bind(this)} className=\"arrow left-double-arrow\" src={leftDoubleArrow} />\n                <img onClick={this.goToNextYear.bind(this)} className=\"arrow right-double-arrow\" src={rightDoubleArrow} />\n                <img onClick={this.goToPrevMonth.bind(this)} className=\"arrow left-arrow\" src={leftArrow} />\n                <img onClick={this.goToNextMonth.bind(this)} className=\"arrow right-arrow\" src={rightArrow} />\n                <span id=\"month\">{getMonthYear(this.state.markDate)}</span>\n            </div>\n            <div id=\"dates\">\n                {getWeekDays(false)}\n                {this.getDates(this.state.markDate, this.state.activeDate)}\n            </div>\n                </div>;\n    }\n}\n\nexport default Calendar;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Control.js",["193"],"import React from 'react';\nimport '../styles/Control.css';\nimport AllLabels from './AllLabels';\nimport AllProjects from './AllProjects';\nimport AddEvent from './AddEvent';\nimport SelectProject from './SelectProject';\nimport Filter from './Filter';\n\nclass Control extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div id=\"control\">\n            <AllLabels />\n            <AllProjects />\n            <AddEvent />\n            <SelectProject />\n            <Filter />\n        </div>;\n    }\n}\n\nexport default Control;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/calendar.js",["194","195","196","197","198","199"],"import SingleDateCalendar from \"../components/SingleDateCalendar\";\nimport SingleDateEventCalendar from \"../components/SingleDateEventCalendar\";\nimport SingleDateAddEvent from '../components/SingleDateAddEvent';\nimport { SINGLE_DATE_CALENDAR, SINGLE_DATE_ADD_EVENT, SINGLE_DATE_EVENT_CALENDAR } from '../utils/constants';\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nexport function monthIndexToMonth(monthIndex) {\n    return months[monthIndex];\n}\n\nexport function monthToMonthIndex(month) {\n    return months.indexOf(month);\n}\n\nexport function dateToDateObj(date) {\n    if(!date) date = new Date();\n    return [date.getMonth(), date.getFullYear(), date.getDate()];\n}\n\nexport function dateObjToDate(dateObj) {\n    if(!dateObj) return new Date();\n    return new Date(dateObj[1], dateObj[0], dateObj[2]);\n}\n\nexport function getPreviousMonthDateObj(dateObj) {\n    let newDateObj = [...dateObj];\n    if(newDateObj[0] === 0) {\n        newDateObj[0] = 11;\n        newDateObj[1] -= 1;\n        newDateObj[2] = 1;\n    }\n    else {\n        newDateObj[0] -= 1;\n        newDateObj[2] = 1;\n    }\n    return newDateObj;\n}\n\nexport function getNextMonthDateObj(dateObj) {\n    let newDateObj = [...dateObj];\n    if(newDateObj[0] === 11) {\n        newDateObj[0] = 0;\n        newDateObj[1] += 1;\n        newDateObj[2] = 1;\n    }\n    else {\n        newDateObj[0] += 1;\n        newDateObj[2] = 1;\n    }\n    return newDateObj;\n}\n\nexport function getPreviousYearDateObj(dateObj) {\n    let newDateObj = [...dateObj];\n    newDateObj[1] -= 1;\n    newDateObj[2] = 1;\n    return newDateObj;\n}\n\nexport function getNextYearDateObj(dateObj) {\n    let newDateObj = [...dateObj];\n    newDateObj[1] += 1;\n    newDateObj[2] = 1;\n    return newDateObj;\n}\n\nexport function getMonthYear(dateObj) {\n    return monthIndexToMonth(dateObj[0]) + ' ' + dateObj[1].toString();\n}\n\nexport function getWeekDays(event) {\n    if(event) {\n        return [\n            <span className={'grid-cell-event-calendar'}>S</span>,\n            <span className={'grid-cell-event-calendar'}>M</span>,\n            <span className={'grid-cell-event-calendar'}>T</span>,\n            <span className={'grid-cell-event-calendar'}>W</span>,\n            <span className={'grid-cell-event-calendar'}>T</span>,\n            <span className={'grid-cell-event-calendar'}>F</span>,\n            <span className={'grid-cell-event-calendar'}>S</span>,\n        ]\n    }\n    return [\n        <span className={'grid-cell'}>SUN</span>,\n        <span className={'grid-cell'}>MON</span>,\n        <span className={'grid-cell'}>TUE</span>,\n        <span className={'grid-cell'}>WED</span>,\n        <span className={'grid-cell'}>THU</span>,\n        <span className={'grid-cell'}>FRI</span>,\n        <span className={'grid-cell'}>SAT</span>,\n    ];\n}\n\nexport function getLastMonthTotalDates(dateObj) {\n    let date = dateObjToDate(dateObj);\n    date.setDate(0);\n    return date.getDate();\n}\n\nexport function getCurrMonthTotalDates(dateObj) {\n    let date = dateObjToDate(dateObj);\n    date.setMonth(date.getMonth() + 1);\n    date.setDate(0);\n    return date.getDate();\n}\n\nexport function getCurrMonthStartingDay(dateObj) {\n    let date = dateObjToDate(dateObj);\n    date.setDate(1);\n    return date.getDay();\n}\n\nexport function getNextMonthStartingDay(dateObj) {\n    let nextMonthDateObj = getNextMonthDateObj(dateObj);\n    return getCurrMonthStartingDay(nextMonthDateObj);\n}","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/server.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/redux.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/projectArea.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/userInfo.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/utils/constants.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/allEvents.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/displayArea.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SelectProject.js",["200","201"],"import React from \"react\";\nimport controlSign from '../images/control.png';\nimport filterIcon from '../images/filter.png';\nimport SingleProjectSelection from './SingleProjectSelection';\nimport store from \"../store\";\nimport { equalArrays } from \"../utils/redux\";\n\n\nclass SelectProject extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayProjectSelection: 'none',\n            projects: [],\n        }\n    }\n    async componentDidMount() {\n        await store.subscribe(this.handleProjectsChange.bind(this));\n    }\n    handleProjectsChange() {\n        let newProjects = store.getState().allEvents?.projects;\n        if(newProjects && !equalArrays(newProjects, this.state.projects)) {\n            this.setState({\n                projects: [...newProjects]\n            })\n        }\n    }\n    getProjects(projects) {\n        let arr = [];\n        for(let i = 0; i < projects.length; ++i) {\n            arr.push(<SingleProjectSelection key={Math.random()} name={projects[i]} displayProjectSelection={this.displayProjectSelection.bind(this)}/>);\n        }\n        return arr;\n    }\n    displayProjectSelection() {\n        this.setState({\n            displayProjectSelection: this.state.displayProjectSelection === 'none' ? 'block' : 'none'\n        });\n    }\n    render() {\n        return <div className=\"project-selector\">\n            <div className=\"addition\" onClick={this.displayProjectSelection.bind(this)}>\n                <img className=\"addition-arrow\" src={controlSign}/>\n                <span className=\"addition-text\">Select Project</span>\n                <img className='event-adder-img' src={filterIcon}></img>\n            </div>\n            <div className=\"single-label-wrapper\" style={{display: this.state.displayProjectSelection}}>\n                {this.getProjects(this.state.projects)}\n            </div>\n        </div>;\n    }\n}\n\nexport default SelectProject;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleDateCalendar.js",["202"],"import React from 'react';\n\nclass SingleDateCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        if(this.props.backgroundColor === 'transparent') {\n            return <div onClick={this.props.setActiveDate.bind(null, this.props.date)} className='grid-cell'>\n                <div style={{\n                color: this.props.fontColor,\n                backgroundColor: this.props.backgroundColor}}>\n                {this.props.date}\n                </div>\n            </div>;\n        }\n        else {\n            return <div onClick={this.props.setActiveDate.bind(null, this.props.date)} className='grid-cell'>\n                <div style={{\n                color: this.props.fontColor,\n                backgroundColor: this.props.backgroundColor,\n                marginLeft: '23%',\n                height: '37px',\n                width: '37px',\n                borderRadius: '50%'}}>\n                {this.props.date}\n                </div>\n            </div>;\n        }\n    }\n}\n\nexport default SingleDateCalendar;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AllLabels.js",["203","204","205","206"],"import React from \"react\";\nimport '../styles/AllLabels.css';\nimport controlSign from '../images/control.png';\nimport addition from '../images/addition.png';\nimport labelSign from '../images/label.png';\nimport confirmSign from '../images/confirmOrange.png';\nimport SingleLabel from \"./SingleLabel\";\nimport store from \"../store\";\nimport { equalArrays } from \"../utils/redux\";\nimport { setState } from \"../actions/allEvents\";\nimport { updateState } from '../utils/server';\n\n\nclass AllLabels extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayAddLabel: 'none',\n            displayLabels: 'none',\n            labels: [],\n            name: '',\n        }\n    }\n    async componentDidMount() {\n        await store.subscribe(this.handleLabelsChange.bind(this));\n    }\n    handleLabelsChange() {\n        let newLabels = store.getState().allEvents?.labels;\n        if(newLabels && !equalArrays(newLabels, this.state.labels)) {\n            this.setState({\n                labels: [...newLabels]\n            })\n        }\n    }\n    displayAddLabel() {\n        this.setState({\n            displayAddLabel: this.state.displayAddLabel === 'none' ? 'block' : 'none'\n        });\n    }\n    displayLabels() {\n        let displayVal = this.state.displayLabels === 'none' ? 'block' : 'none';\n        if(this.state.labels.length === 0) displayVal = 'none';\n        this.setState({\n            displayLabels: displayVal\n        })\n    }\n    getLabels(labels) {\n        let arr = [];\n        for(let i = 0; i < labels.length; ++i) {\n            arr.push(<SingleLabel key={Math.random()} name={labels[i]}/>);\n        }\n        return arr;\n    }\n    handleInputValue(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n    async addLabel() {\n        if(this.state.name === '') {\n            alert('Label name must not be empty!');\n            return;\n        }\n        if(store.getState().allEvents.labels.indexOf(this.state.name) !== -1) {\n            alert('Repeated label!');\n            return;\n        }\n        let state = Object.assign({}, store.getState().allEvents);\n        state.labels.push(this.state.name);\n        await store.dispatch(setState(state));\n        this.setState({\n            displayAddLabel: 'none',\n            name: ''\n        });\n        updateState();\n    }\n    render() {\n        return <div className=\"label-controller\">\n            <div className=\"addition\">\n                <img className=\"addition-arrow\" src={controlSign} onClick={this.displayLabels.bind(this)}/>\n                <span className=\"addition-text\" onClick={this.displayLabels.bind(this)}>Labels</span>\n                <img className=\"addition-sign\" src={addition} onClick={this.displayAddLabel.bind(this)}/>\n            </div>\n            <div className=\"single-label-wrapper\" style={{display: this.state.displayLabels}}>\n                {this.getLabels(this.state.labels)}\n            </div>\n            <div className='add-label' style={{display: this.state.displayAddLabel}}>\n                <img className='add-label-image' src={labelSign}/>\n                <input value={this.state.name} className='add-label-name' onChange={this.handleInputValue.bind(this)}/>\n                <img className=\"add-label-confirm\" onClick={this.addLabel.bind(this)} src={confirmSign}/>\n            </div>\n        </div>;\n    }\n}\n\nexport default AllLabels;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AllProjects.js",["207","208","209"],"import React from \"react\";\nimport '../styles/AllProjects.css';\nimport controlSign from '../images/control.png';\nimport addition from '../images/addition.png';\nimport projectSign from '../images/project.png';\nimport SingleProject from './SingleProject';\nimport store from \"../store\";\nimport { equalArrays } from \"../utils/redux\";\nimport { setState } from \"../actions/allEvents\";\nimport { updateState } from '../utils/server';\n\nclass AllProjects extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayAddProject: 'none',\n            displayProjects: 'none',\n            projects: [],\n            name: '',\n        }\n    }\n    async componentDidMount() {\n        await store.subscribe(this.handleProjectsChange.bind(this));\n    }\n    handleProjectsChange() {\n        let newProjects = store.getState().allEvents?.projects;\n        if(newProjects && !equalArrays(newProjects, this.state.projects)) {\n            this.setState({\n                projects: [...newProjects]\n            })\n        }\n    }\n    displayAddProject() {\n        this.setState({\n            displayAddProject: this.state.displayAddProject === 'none' ? 'block' : 'none'\n        });\n    }\n    displayProjects() {\n        let displayVal = this.state.displayProjects === 'none' ? 'block' : 'none';\n        if(this.state.projects.length === 0) displayVal = 'none';\n        this.setState({\n            displayProjects: displayVal\n        })\n    }\n    getProjects(projects) {\n        let arr = [];\n        for(let i = 0; i < projects.length; ++i) {\n            arr.push(<SingleProject key={Math.random()} name={projects[i]}/>);\n        }\n        return arr;\n    }\n    handleInputValue(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n    async addProject() {\n        if(this.state.name === '') {\n            alert('Project name must not be empty!');\n            return;\n        }\n        if(store.getState().allEvents.projects.indexOf(this.state.name) !== -1) {\n            alert('Repeated project name!');\n            return;\n        }\n        let state = Object.assign({}, store.getState().allEvents);\n        state.projects.push(this.state.name);\n        await store.dispatch(setState(state));\n        this.setState({\n            displayAddProject: 'none',\n            name: ''\n        });\n        updateState();\n    }\n    render() {\n        return <div className=\"project-controller\">\n            <div className=\"addition\">\n                <img className=\"addition-arrow\" src={controlSign} onClick={this.displayProjects.bind(this)}/>\n                <span className=\"addition-text\" onClick={this.displayProjects.bind(this)}>Projects</span>\n                <img className=\"addition-sign\" src={addition} onClick={this.displayAddProject.bind(this)}/>\n            </div>\n            <div className=\"single-label-wrapper\" style={{display: this.state.displayProjects}}>\n                {this.getProjects(this.state.projects)}\n            </div>\n            <div className='add-project' style={{display: this.state.displayAddProject}}>\n                <img className='add-project-image' src={projectSign}/>\n                <input value={this.state.name} className='add-project-name' onChange={this.handleInputValue.bind(this)}/>\n                <button onClick={this.addProject.bind(this)} className='add-project-confirm'>确认</button>\n            </div>\n        </div>;\n    }\n}\n\nexport default AllProjects;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEvent.js",["210","211","212","213","214","215","216"],"import React from 'react';\nimport '../styles/SingleEvent.css';\nimport '../styles/AddEvent.css';\nimport addition from '../images/addition.png';\nimport calendarIcon from '../images/calendar.png';\nimport labelIcon from '../images/label.png';\nimport projectIcon from '../images/project.png';\nimport priorityIcon from '../images/priority.png';\nimport confirmIcon from '../images/confirm.png';\nimport controlSign from '../images/control.png';\nimport AddEventCalendar from './AddEventCalendar';\nimport AddEventLabelSelection from './AddEventLabelSelection';\nimport AddEventProjectSelection from './AddEventProjectSelection';\nimport AddEventPrioritySelection from './AddEventPrioritySelection';\nimport { addEvent } from '../utils/redux';\nimport { updateState } from '../utils/server';\nimport store from '../store';\nimport { filterProject } from '../actions/projectArea';\nimport { filterDisplayEvents } from '../actions/displayArea';\nimport { dateToDateObj, getMonthYear, getPreviousMonthDateObj, getNextMonthDateObj, getPreviousYearDateObj, getNextYearDateObj, getLastMonthTotalDates, getCurrMonthTotalDates, getCurrMonthStartingDay, getNextMonthStartingDay} from '../utils/calendar';\nimport SingleDateAddEvent from './SingleDateAddEvent';\n\nclass AddEvent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            text: '',\n            calendarDisplay: 'none',\n            labelsDisplay: 'none',\n            projectsDisplay: 'none',\n            priorityDisplay: 'none',\n            interfaceDisplay: 'none',\n            markDate: dateToDateObj(new Date()),\n            activeDate: dateToDateObj(new Date()),\n            activeLabels: [],\n            activeProjects: [],\n            activePriority: 'p4',\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    setActiveLabels(e) {\n        let activeLabels = [...this.state.activeLabels];\n        if(e.target.checked) {\n            this.setState({\n                activeLabels: [...activeLabels, e.target.name]\n            })\n        }\n        else {\n            activeLabels.splice(activeLabels.indexOf(e.target.name), 1)\n            this.setState({\n                activeLabels: activeLabels\n            })\n        }\n    }\n    setActiveProjects(e) {\n        let activeProjects = [...this.state.activeProjects];\n        if(e.target.checked) {\n            this.setState({\n                activeProjects: [...activeProjects, e.target.name]\n            })\n        }\n        else {\n            activeProjects.splice(activeProjects.indexOf(e.target.name), 1)\n            this.setState({\n                activeProjects: activeProjects\n            })\n        }\n    }\n    setActivePriority(e) {\n        this.setState({\n            activePriority: e.target.value\n        })\n    }\n    async addEvent() {\n        if(this.state.title === '') {\n            alert('Title must not be empty!');\n            return;\n        }\n        if(this.state.text === '') {\n            alert('Content must not be empty!');\n            return;\n        }\n        await addEvent(this.state.title, this.state.text, this.state.activeDate, this.state.activeLabels, this.state.activeProjects, this.state.activePriority);\n        updateState();\n        await this.setState({\n            title: '',\n            text: '',\n            calendarDisplay: 'none',\n            labelsDisplay: 'none',\n            projectsDisplay: 'none',\n            priorityDisplay: 'none',\n            interfaceDisplay: 'none',\n            markDate: dateToDateObj(new Date()),\n            activeDate: dateToDateObj(new Date()),\n            activeLabels: [],\n            activeProjects: [],\n            activePriority: [],\n        });\n        await store.dispatch(filterProject(store.getState().allEvents.events));\n        await store.dispatch(filterDisplayEvents(store.getState().allEvents.events));\n    }\n    async displayAddEventInterface() {\n        await this.setState({\n            title: '',\n            text: '',\n            calendarDisplay: 'none',\n            labelsDisplay: 'none',\n            projectsDisplay: 'none',\n            priorityDisplay: 'none',\n            interfaceDisplay: this.state.interfaceDisplay === 'none' ? 'block' : 'none',\n            markDate: dateToDateObj(new Date()),\n            activeDate: dateToDateObj(new Date()),\n            activeLabels: [],\n            activeProjects: [],\n            activePriority: 'p4',\n        });\n    }\n    displayCalendar() {\n        if(this.state.calendarDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'block',\n                labelsDisplay: 'none',\n                projectsDisplay: 'none',\n                priorityDisplay: 'none',\n            });\n        }\n        else {\n            this.setState({\n                calendarDisplay: 'none',\n            })\n        }\n    }\n    displayLabels() {\n        if(this.state.labelsDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'none',\n                labelsDisplay: 'block',\n                projectsDisplay: 'none',\n                priorityDisplay: 'none',\n            });\n        }\n        else {\n            this.setState({\n                labelsDisplay: 'none',\n            })\n        }\n    }\n    displayProjects() {\n        if(this.state.projectsDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'none',\n                labelsDisplay: 'none',\n                projectsDisplay: 'block',\n                priorityDisplay: 'none',\n            });\n        }\n        else {\n            this.setState({\n                projectsDisplay: 'none',\n            })\n        }\n    }\n    displayPriority() {\n        if(this.state.priorityDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'none',\n                labelsDisplay: 'none',\n                projectsDisplay: 'none',\n                priorityDisplay: 'block',\n            });\n        }\n        else {\n            this.setState({\n                priorityDisplay: 'none',\n            })\n        }\n    }\n    goToPrevYear() {\n        this.setState({\n            markDate: getPreviousYearDateObj(this.state.markDate)\n        })\n    }\n    goToNextYear() {\n        this.setState({\n            markDate: getNextYearDateObj(this.state.markDate)\n        })\n    }\n    goToPrevMonth() {\n        this.setState({\n            markDate: getPreviousMonthDateObj(this.state.markDate)\n        })\n    }\n    goToNextMonth() {\n        this.setState({\n            markDate: getNextMonthDateObj(this.state.markDate)\n        })\n    }\n    setActiveDate(date) {\n        let dateObj = this.state.markDate;\n        dateObj[2] = date;\n        this.setState({\n            markDate: dateObj,\n            activeDate: dateObj,\n        });\n    }\n    getDates(markDate, activeDate) {\n        let arr = [];\n        let lastMonthTotalDates = getLastMonthTotalDates(markDate);\n        let currMonthTotalDates = getCurrMonthTotalDates(markDate);\n        let currMonthStartingDay = getCurrMonthStartingDay(markDate);\n        let nextMonthStartingDay = getNextMonthStartingDay(markDate);\n        for(let i = lastMonthTotalDates - currMonthStartingDay + 1; i <= lastMonthTotalDates; ++i) {\n            arr.push(<SingleDateAddEvent key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={this.setActiveDate.bind(this)}/>)\n        }\n        for(let i = 1; i <= currMonthTotalDates; ++i) {\n            if(getMonthYear(markDate) === getMonthYear(activeDate) && i === activeDate[2]) arr.push(<SingleDateAddEvent key={Math.random()} date={i} backgroundColor={'lightblue'} fontColor={'white'} setActiveDate={this.setActiveDate.bind(this)}/>)\n            else arr.push(<SingleDateAddEvent key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'black'} setActiveDate={this.setActiveDate.bind(this)}/>)\n            \n        }\n        for(let i = 1; i <= 7 - nextMonthStartingDay; ++i) {\n            arr.push(<SingleDateAddEvent key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={this.setActiveDate.bind(this)}/>);\n        }\n        return arr;\n    }\n    render() {\n        return <div>\n                    <div className='event-adder-wrapper' onClick={this.displayAddEventInterface.bind(this)}>\n                        <img className=\"addition-arrow\" src={controlSign}/>\n                        <span className='event-adder-text'>New Event</span>\n                        <img className='event-adder-img' src={addition}></img>\n                    </div>\n                    <div className='single-event' style={{display: this.state.interfaceDisplay}}>\n                        <div className='single-event-minimal'>\n                            <input name=\"title\" value={this.state.title} onChange={this.handleInputChange.bind(this)} className='single-event-title-input' />\n                        </div>\n                        <div className='single-event-details'>\n                            <textarea name=\"text\" value={this.state.text} onChange={this.handleInputChange.bind(this)} className='single-event-text'></textarea>\n                            <div className='single-event-icons'>\n                                <img onClick={this.displayCalendar.bind(this)} className='single-event-icon' src={calendarIcon}/>\n                                <img onClick={this.displayLabels.bind(this)} className='single-event-icon' src={labelIcon}/>\n                                <img onClick={this.displayProjects.bind(this)} className='single-event-icon' src={projectIcon}/>\n                                <img onClick={this.displayPriority.bind(this)} className='single-event-icon' src={priorityIcon}/>\n                                <img onClick={this.addEvent.bind(this)} src={confirmIcon} className='confirm-icon'/>\n                                <AddEventCalendar\n                                    display={this.state.calendarDisplay}\n                                    goToPrevMonth={this.goToPrevMonth.bind(this)}\n                                    goToNextMonth={this.goToNextMonth.bind(this)}\n                                    goToPrevYear={this.goToPrevYear.bind(this)}\n                                    goToNextYear={this.goToNextYear.bind(this)}\n                                    markDate={this.state.markDate}\n                                    activeDate={this.state.activeDate}\n                                    setActiveDate={this.setActiveDate.bind(this)}\n                                    getDates={this.getDates.bind(this)}/>\n                                <AddEventLabelSelection display={this.state.labelsDisplay} activeLabels={this.state.activeLabels} setActiveLabels={this.setActiveLabels.bind(this)}/>\n                                <AddEventProjectSelection display={this.state.projectsDisplay} activeProjects={this.state.activeProjects} setActiveProjects={this.setActiveProjects.bind(this)}/>\n                                <AddEventPrioritySelection display={this.state.priorityDisplay} activePriority={this.state.activePriority} setActivePriority={this.setActivePriority.bind(this)}/>\n                            </div>\n                        </div>\n                </div>\n            </div>\n    }\n}\n\nexport default AddEvent;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/Filter.js",["217","218","219","220","221","222","223"],"import React from \"react\";\nimport AddEventCalendar from './AddEventCalendar';\nimport AddEventLabelSelection from './AddEventLabelSelection';\nimport AddEventProjectSelection from './AddEventProjectSelection';\nimport AddEventPrioritySelection from './AddEventPrioritySelection';\nimport SingleDateAddEvent from './SingleDateAddEvent';\nimport calendarIcon from '../images/calendar.png';\nimport labelIcon from '../images/label.png';\nimport projectIcon from '../images/project.png';\nimport priorityIcon from '../images/priority.png';\nimport controlSign from '../images/control.png';\nimport confirmIcon from '../images/confirm.png';\nimport filterIcon from '../images/filter.png';\nimport store from '../store';\nimport { dateToDateObj, getMonthYear, getPreviousMonthDateObj, getNextMonthDateObj, getPreviousYearDateObj, getNextYearDateObj, getLastMonthTotalDates, getCurrMonthTotalDates, getCurrMonthStartingDay, getNextMonthStartingDay} from '../utils/calendar';\nimport { setDisplayConditions, filterDisplayEvents } from '../actions/displayArea';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            calendarDisplay: 'none',\n            labelsDisplay: 'none',\n            projectsDisplay: 'none',\n            priorityDisplay: 'none',\n            markDate: dateToDateObj(new Date()),\n            activeDate: dateToDateObj(new Date()),\n            interfaceDisplay: 'none',\n            activeLabels: [],\n            activeProjects: [],\n            activePriority: 'p4',\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    setActiveLabels(e) {\n        let activeLabels = [...this.state.activeLabels];\n        if(e.target.checked) {\n            this.setState({\n                activeLabels: [...activeLabels, e.target.name]\n            })\n        }\n        else {\n            activeLabels.splice(activeLabels.indexOf(e.target.name), 1)\n            this.setState({\n                activeLabels: activeLabels\n            })\n        }\n    }\n    setActiveProjects(e) {\n        let activeProjects = [...this.state.activeProjects];\n        if(e.target.checked) {\n            this.setState({\n                activeProjects: [...activeProjects, e.target.name]\n            })\n        }\n        else {\n            activeProjects.splice(activeProjects.indexOf(e.target.name), 1)\n            this.setState({\n                activeProjects: activeProjects\n            })\n        }\n    }\n    setActivePriority(e) {\n        this.setState({\n            activePriority: e.target.value\n        })\n    }\n    displayCalendar() {\n        if(this.state.calendarDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'block',\n                labelsDisplay: 'none',\n                projectsDisplay: 'none',\n                priorityDisplay: 'none',\n            });\n        }\n        else {\n            this.setState({\n                calendarDisplay: 'none',\n            })\n        }\n    }\n    displayLabels() {\n        if(this.state.labelsDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'none',\n                labelsDisplay: 'block',\n                projectsDisplay: 'none',\n                priorityDisplay: 'none',\n            });\n        }\n        else {\n            this.setState({\n                labelsDisplay: 'none',\n            })\n        }\n    }\n    displayProjects() {\n        if(this.state.projectsDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'none',\n                labelsDisplay: 'none',\n                projectsDisplay: 'block',\n                priorityDisplay: 'none',\n            });\n        }\n        else {\n            this.setState({\n                projectsDisplay: 'none',\n            })\n        }\n    }\n    displayPriority() {\n        if(this.state.priorityDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'none',\n                labelsDisplay: 'none',\n                projectsDisplay: 'none',\n                priorityDisplay: 'block',\n            });\n        }\n        else {\n            this.setState({\n                priorityDisplay: 'none',\n            })\n        }\n    }\n    goToPrevYear() {\n        this.setState({\n            markDate: getPreviousYearDateObj(this.state.markDate)\n        })\n    }\n    goToNextYear() {\n        this.setState({\n            markDate: getNextYearDateObj(this.state.markDate)\n        })\n    }\n    goToPrevMonth() {\n        this.setState({\n            markDate: getPreviousMonthDateObj(this.state.markDate)\n        })\n    }\n    goToNextMonth() {\n        this.setState({\n            markDate: getNextMonthDateObj(this.state.markDate)\n        })\n    }\n    setActiveDate(date) {\n        let dateObj = this.state.markDate;\n        dateObj[2] = date;\n        this.setState({\n            markDate: dateObj,\n            activeDate: dateObj,\n        });\n    }\n    getDates(markDate, activeDate) {\n        let arr = [];\n        let lastMonthTotalDates = getLastMonthTotalDates(markDate);\n        let currMonthTotalDates = getCurrMonthTotalDates(markDate);\n        let currMonthStartingDay = getCurrMonthStartingDay(markDate);\n        let nextMonthStartingDay = getNextMonthStartingDay(markDate);\n        for(let i = lastMonthTotalDates - currMonthStartingDay + 1; i <= lastMonthTotalDates; ++i) {\n            arr.push(<SingleDateAddEvent key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={this.setActiveDate.bind(this)}/>)\n        }\n        for(let i = 1; i <= currMonthTotalDates; ++i) {\n            if(getMonthYear(markDate) === getMonthYear(activeDate) && i === activeDate[2]) arr.push(<SingleDateAddEvent key={Math.random()} date={i} backgroundColor={'lightblue'} fontColor={'white'} setActiveDate={this.setActiveDate.bind(this)}/>)\n            else arr.push(<SingleDateAddEvent key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'black'} setActiveDate={this.setActiveDate.bind(this)}/>)\n            \n        }\n        for(let i = 1; i <= 7 - nextMonthStartingDay; ++i) {\n            arr.push(<SingleDateAddEvent key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={this.setActiveDate.bind(this)}/>);\n        }\n        return arr;\n    }\n    async displayInterface() {\n        await this.setState({\n            interfaceDisplay: this.state.interfaceDisplay === 'none' ? 'block' : 'none',\n            calendarDisplay: 'none',\n            labelsDisplay: 'none',\n            projectsDisplay: 'none',\n            priorityDisplay: 'none',\n            markDate: dateToDateObj(new Date()),\n            activeDate: dateToDateObj(new Date()),\n            activeLabels: [],\n            activeProjects: [],\n            activePriority: 'p4',\n        });\n    }\n    async confirmFilter() {\n        let conditions = {\n            activeDate: this.state.activeDate,\n            activeLabels: this.state.activeLabels,\n            activeProjects: this.state.activeProjects,\n            activePriority: this.state.activePriority,\n        };\n        await store.dispatch(setDisplayConditions(conditions));\n        await store.dispatch(filterDisplayEvents(store.getState().allEvents.events));\n        await this.setState({\n            calendarDisplay: 'none',\n            labelsDisplay: 'none',\n            projectsDisplay: 'none',\n            priorityDisplay: 'none',\n            markDate: dateToDateObj(new Date()),\n            activeDate: dateToDateObj(new Date()),\n            interfaceDisplay: 'none',\n            activeLabels: [],\n            activeProjects: [],\n            activePriority: 'p4',\n        });\n    }\n    render() {\n        return <div>\n                <div className='event-adder-wrapper' onClick={this.displayInterface.bind(this)}>\n                    <img className=\"addition-arrow\" src={controlSign}/>\n                    <span className='event-adder-text'>Filter Event</span>\n                    <img className='event-adder-img' src={filterIcon}></img>\n                </div>\n                <div className='single-event-icons test' style={{display: this.state.interfaceDisplay}}>\n                    <img onClick={this.displayCalendar.bind(this)} className='single-event-icon' src={calendarIcon}/>\n                    <img onClick={this.displayLabels.bind(this)} className='single-event-icon' src={labelIcon}/>\n                    <img onClick={this.displayProjects.bind(this)} className='single-event-icon' src={projectIcon}/>\n                    <img onClick={this.displayPriority.bind(this)} className='single-event-icon' src={priorityIcon}/>\n                    <img onClick={this.confirmFilter.bind(this)} src={confirmIcon} className='confirm-icon'/>\n                    <AddEventCalendar\n                        display={this.state.calendarDisplay}\n                        goToPrevMonth={this.goToPrevMonth.bind(this)}\n                        goToNextMonth={this.goToNextMonth.bind(this)}\n                        goToPrevYear={this.goToPrevYear.bind(this)}\n                        goToNextYear={this.goToNextYear.bind(this)}\n                        markDate={this.state.markDate}\n                        activeDate={this.state.activeDate}\n                        setActiveDate={this.setActiveDate.bind(this)}\n                        getDates={this.getDates.bind(this)}/>\n                    <AddEventLabelSelection display={this.state.labelsDisplay} activeLabels={this.state.activeLabels} setActiveLabels={this.setActiveLabels.bind(this)}/>\n                    <AddEventProjectSelection display={this.state.projectsDisplay} activeProjects={this.state.activeProjects} setActiveProjects={this.setActiveProjects.bind(this)}/>\n                    <AddEventPrioritySelection display={this.state.priorityDisplay} activePriority={this.state.activePriority} setActivePriority={this.setActivePriority.bind(this)}/>\n                </div>\n            </div>\n    }\n}\n\nexport default Filter;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleEvent.js",["224","225","226","227","228","229"],"import React from 'react';\nimport '../styles/SingleEvent.css';\nimport check from '../images/check.png';\nimport calendarIcon from '../images/calendar.png';\nimport labelIcon from '../images/label.png';\nimport projectIcon from '../images/project.png';\nimport priorityIcon from '../images/priority.png';\nimport confirmIcon from '../images/confirm.png';\nimport EventCalendar from './EventCalendar';\nimport EventLabelSelection from './EventLabelSelection';\nimport EventProjectSelection from './EventProjectSelection';\nimport EventPrioritySelection from './EventPrioritySelection';\nimport store from '../store';\nimport { getPreviousMonthDateObj, getNextMonthDateObj, getPreviousYearDateObj, getNextYearDateObj} from '../utils/calendar';\nimport { updateEvent, setState } from '../actions/allEvents';\nimport { filterDisplayEvents } from '../actions/displayArea';\nimport { filterProject } from '../actions/projectArea';\nimport { updateState } from '../utils/server';\n\nclass SingleEvent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: this.props.title,\n            text: this.props.text,\n            calendarDisplay: 'none',\n            labelsDisplay: 'none',\n            projectsDisplay: 'none',\n            priorityDisplay: 'none',\n            interfaceDisplay: 'none',\n            markDate: this.props.activeDate,\n            activeDate: this.props.activeDate,\n            activeLabels: this.props.activeLabels,\n            activeProjects: this.props.activeProjects,\n            activePriority: this.props.activePriority,\n        }\n        this.initialText = this.state.text;\n        this.initialMarkDate = [...this.state.markDate];\n        this.initialActiveDate = [...this.state.activeDate];\n        this.initialActiveLabels = [...this.state.activeLabels];\n        this.initialActiveProjects = [...this.state.activeProjects];\n        this.initialActivePriority = this.state.activePriority;\n    }\n    displayInterface() {\n        this.setState({\n            interfaceDisplay: this.state.interfaceDisplay === 'none' ? 'block' : 'none',\n            calendarDisplay: 'none',\n            labelsDisplay: 'none',\n            projectsDisplay: 'none',\n            priorityDisplay: 'none',\n            text: this.initialText,\n            markDate: this.initialMarkDate,\n            activeDate: this.initialActiveDate,\n            activeLabels: this.initialActiveLabels,\n            activeProjects: this.initialActiveProjects,\n            activePriority: this.initialActivePriority,\n        });\n    }\n    displayCalendar() {\n        if(this.state.calendarDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'block',\n                labelsDisplay: 'none',\n                projectsDisplay: 'none',\n                priorityDisplay: 'none',\n            });\n        }\n        else {\n            this.setState({\n                calendarDisplay: 'none',\n            })\n        }\n    }\n    displayLabels() {\n        if(this.state.labelsDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'none',\n                labelsDisplay: 'block',\n                projectsDisplay: 'none',\n                priorityDisplay: 'none',\n            });\n        }\n        else {\n            this.setState({\n                labelsDisplay: 'none',\n            })\n        }\n    }\n    displayProjects() {\n        if(this.state.projectsDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'none',\n                labelsDisplay: 'none',\n                projectsDisplay: 'block',\n                priorityDisplay: 'none',\n            });\n        }\n        else {\n            this.setState({\n                projectsDisplay: 'none',\n            })\n        }\n    }\n    displayPriority() {\n        if(this.state.priorityDisplay === 'none') {\n            this.setState({\n                calendarDisplay: 'none',\n                labelsDisplay: 'none',\n                projectsDisplay: 'none',\n                priorityDisplay: 'block',\n            });\n        }\n        else {\n            this.setState({\n                priorityDisplay: 'none',\n            })\n        }\n    }\n    setActiveLabels(e) {\n        let activeLabels = [...this.state.activeLabels];\n        if(e.target.checked) {\n            this.setState({\n                activeLabels: [...activeLabels, e.target.name]\n            })\n        }\n        else {\n            activeLabels.splice(activeLabels.indexOf(e.target.name), 1)\n            this.setState({\n                activeLabels: activeLabels\n            })\n        }\n    }\n    setActiveProjects(e) {\n        let activeProjects = [...this.state.activeProjects];\n        if(e.target.checked) {\n            this.setState({\n                activeProjects: [...activeProjects, e.target.name]\n            })\n        }\n        else {\n            activeProjects.splice(activeProjects.indexOf(e.target.name), 1)\n            this.setState({\n                activeProjects: activeProjects\n            })\n        }\n    }\n    setActivePriority(e) {\n        this.setState({\n            activePriority: e.target.value\n        })\n    }\n    async confirmChange() {\n        let event = {\n            title: this.state.title,\n            text: this.state.text,\n            activeDate: this.state.activeDate,\n            activeLabels: this.state.activeLabels,\n            activeProjects: this.state.activeProjects,\n            activePriority: this.state.activePriority,\n        }\n        await store.dispatch(updateEvent(event, this.props.eventIndex));\n        await store.dispatch(filterDisplayEvents(store.getState().allEvents.events));\n        await store.dispatch(filterProject(store.getState().allEvents.events));\n        await updateState();\n    }\n    async completeEvent() {\n        let newState = JSON.parse(JSON.stringify(store.getState().allEvents));\n        newState.events.splice(this.props.eventIndex, 1);\n        await store.dispatch(setState(newState));\n        await store.dispatch(filterDisplayEvents(store.getState().allEvents.events));\n        await store.dispatch(filterProject(store.getState().allEvents.events));\n        await updateState();\n    }\n    goToPrevYear() {\n        this.setState({\n            markDate: getPreviousYearDateObj(this.state.markDate)\n        })\n    }\n    goToNextYear() {\n        this.setState({\n            markDate: getNextYearDateObj(this.state.markDate)\n        })\n    }\n    goToPrevMonth() {\n        this.setState({\n            markDate: getPreviousMonthDateObj(this.state.markDate)\n        })\n    }\n    goToNextMonth() {\n        this.setState({\n            markDate: getNextMonthDateObj(this.state.markDate)\n        })\n    }\n    setActiveDate(date) {\n        let dateObj = this.state.markDate;\n        dateObj[2] = date;\n        this.setState({\n            markDate: dateObj,\n            activeDate: dateObj,\n        });\n    }\n    setText(e) {\n        this.setState({\n            text: e.target.value\n        })\n    }\n    render() {\n        return <div className='single-event'>\n                <div className='single-event-minimal'>\n                    <img className='check' src={check} onClick={this.completeEvent.bind(this)}></img>\n                    <span className='single-event-title' onClick={this.displayInterface.bind(this)}>{this.state.title}</span>\n                </div>\n                <div className='single-event-details' style={{display: this.state.interfaceDisplay}}>\n                    <textarea className='single-event-text' value={this.state.text} onChange={this.setText.bind(this)}></textarea>\n                    <div className='single-event-icons'>\n                        <img onClick={this.displayCalendar.bind(this)} className='single-event-icon' src={calendarIcon}/>\n                        <img onClick={this.displayLabels.bind(this)} className='single-event-icon' src={labelIcon}/>\n                        <img onClick={this.displayProjects.bind(this)} className='single-event-icon' src={projectIcon}/>\n                        <img onClick={this.displayPriority.bind(this)} className='single-event-icon' src={priorityIcon}/>\n                        <img onClick={this.confirmChange.bind(this)} src={confirmIcon} className='confirm-icon'/>\n                        <EventCalendar \n                            eventIndex={this.props.eventIndex} \n                            display={this.state.calendarDisplay} \n                            goToPrevMonth={this.goToPrevMonth.bind(this)}\n                            goToNextMonth={this.goToNextMonth.bind(this)}\n                            goToPrevYear={this.goToPrevYear.bind(this)}\n                            goToNextYear={this.goToNextYear.bind(this)}\n                            markDate={this.state.markDate}\n                            activeDate={this.state.activeDate}\n                            setActiveDate={this.setActiveDate.bind(this)}/>\n                        <EventLabelSelection eventIndex={this.props.eventIndex} display={this.state.labelsDisplay} activeLabels={this.state.activeLabels} setActiveLabels={this.setActiveLabels.bind(this)}/>\n                        <EventProjectSelection eventIndex={this.props.eventIndex} display={this.state.projectsDisplay} activeProjects={this.state.activeProjects} setActiveProjects={this.setActiveProjects.bind(this)}/>\n                        <EventPrioritySelection eventIndex={this.props.eventIndex} display={this.state.priorityDisplay} activePriority={this.state.activePriority} setActivePriority={this.setActivePriority.bind(this)}/>\n                    </div>\n                </div>\n            </div>\n    }\n}\n\nexport default SingleEvent;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleDateAddEvent.js",["230"],"import React from 'react';\n\n\nclass SingleDateAddEvent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div onClick={this.props.setActiveDate.bind(null, this.props.date)} className='grid-cell-event-calendar' style={{\n            color: this.props.fontColor,\n            backgroundColor: this.props.backgroundColor}}>\n            {this.props.date}\n        </div>;\n    }\n}\n\nexport default SingleDateAddEvent;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleDateEventCalendar.js",["231"],"import React from 'react';\n\nclass SingleDateEventCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        if(this.props.backgroundColor === 'transparent') {\n            return <div onClick={this.props.setActiveDate.bind(null, this.props.date)} className='grid-cell-event-calendar'>\n                <div style={{\n                color: this.props.fontColor,\n                backgroundColor: this.props.backgroundColor}}>\n                {this.props.date}\n                </div>\n            </div>;\n        }\n        else {\n            return <div onClick={this.props.setActiveDate.bind(null, this.props.date)} className='grid-cell-event-calendar'>\n                <div style={{\n                color: this.props.fontColor,\n                backgroundColor: this.props.backgroundColor,\n                marginLeft: '22%',\n                height: '16px',\n                width: '16px',\n                borderRadius: '50%'}}>\n                {this.props.date}\n                </div>\n            </div>;\n        }\n    }\n}\n\nexport default SingleDateEventCalendar;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/index.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/actions/actionTypes.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEventCalendar.js",["232","233","234","235","236"],"import React from 'react';\nimport '../styles/EventCalendar.css';\nimport leftArrow from '../images/arrow-left.png';\nimport rightArrow from '../images/arrow-right.png';\nimport leftDoubleArrow from '../images/arrow-double-left.png';\nimport rightDoubleArrow from '../images/arrow-double-right.png';\nimport { getMonthYear, getWeekDays } from '../utils/calendar';\n\n\nclass AddEventCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div className='event-calendar' style={{display: this.props.display}}>\n        <div className=\"event-calendar-interface\">\n            <img onClick={this.props.goToPrevYear} className=\"arrow left-double-arrow\" src={leftDoubleArrow} />\n            <img onClick={this.props.goToNextYear} className=\"arrow right-double-arrow\" src={rightDoubleArrow} />\n            <img onClick={this.props.goToPrevMonth} className=\"arrow left-arrow\" src={leftArrow} />\n            <img onClick={this.props.goToNextMonth} className=\"arrow right-arrow\" src={rightArrow} />\n            <span className=\"event-calendar-month\">{getMonthYear(this.props.markDate)}</span>\n        </div>\n        <div className=\"event-calendar-dates\">\n            {getWeekDays(true)}\n            {this.props.getDates(this.props.markDate, this.props.activeDate)}\n        </div>\n            </div>;\n    }\n}\n\nexport default AddEventCalendar;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleProjectSelection.js",["237","238"],"import React from 'react';\nimport projectSign from '../images/project.png';\nimport store from '../store';\nimport { selectProject, filterProject } from '../actions/projectArea';\n\nclass SingleProject extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    async selectProject() {\n        this.props.displayProjectSelection();\n        await store.dispatch(selectProject(this.props.name));\n        await store.dispatch(filterProject(store.getState().allEvents.events));\n    }\n    render() {\n        return <div className='single-project' onClick={this.selectProject.bind(this)}>\n            <img className='single-project-image' src={projectSign} />\n            <span className='single-project-text'>{this.props.name}</span>\n        </div>\n    }\n}\n\nexport default SingleProject;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleProject.js",["239","240","241"],"import React from 'react';\nimport '../styles/SingleProject.css';\nimport projectSign from '../images/project.png';\nimport deleteSign from '../images/close.png';\nimport store from '../store';\nimport { setState } from '../actions/allEvents';\nimport { updateState } from '../utils/server';\n\nclass SingleProject extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    async deleteProject() {\n        let state = Object.assign({}, store.getState().allEvents);\n        state.projects.splice(state.projects.indexOf(this.props.name), 1);\n        await store.dispatch(setState(state));\n        updateState();\n    }\n    render() {\n        return <div className='single-project'>\n            <img className='single-project-image' src={projectSign} />\n            <span className='single-project-text'>{this.props.name}</span>\n            <img className='single-project-delete' onClick={this.deleteProject.bind(this)} src={deleteSign}/>\n        </div>\n    }\n}\n\nexport default SingleProject;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/SingleLabel.js",["242","243","244"],"import React from 'react';\nimport '../styles/SingleLabel.css';\nimport labelSign from '../images/label.png';\nimport deleteSign from '../images/close.png';\nimport store from '../store';\nimport { setState } from '../actions/allEvents';\nimport { updateState } from '../utils/server';\n\nclass SingleLabel extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    async deleteLabel() {\n        let state = Object.assign({}, store.getState().allEvents);\n        state.labels.splice(state.labels.indexOf(this.props.name), 1);\n        await store.dispatch(setState(state));\n        updateState();\n    }\n    render() {\n        return <div className='single-label'>\n            <img className='single-label-image' src={labelSign} />\n            <span className='single-label-text'>{this.props.name}</span>\n            <img className='single-label-delete' onClick={this.deleteLabel.bind(this)} src={deleteSign}/>\n        </div>\n    }\n}\n\nexport default SingleLabel;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEventLabelSelection.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEventProjectSelection.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/AddEventPrioritySelection.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/projectArea.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventCalendar.js",["245","246","247","248","249"],"import React from 'react';\nimport '../styles/EventCalendar.css';\nimport leftArrow from '../images/arrow-left.png';\nimport rightArrow from '../images/arrow-right.png';\nimport leftDoubleArrow from '../images/arrow-double-left.png';\nimport rightDoubleArrow from '../images/arrow-double-right.png';\nimport { getMonthYear, getWeekDays, getLastMonthTotalDates, getCurrMonthTotalDates, getCurrMonthStartingDay, getNextMonthStartingDay} from '../utils/calendar';\nimport SingleDateEventCalendar from './SingleDateEventCalendar';\n\nclass EventCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    getDates(markDate, activeDate) {\n        let arr = [];\n        let lastMonthTotalDates = getLastMonthTotalDates(markDate);\n        let currMonthTotalDates = getCurrMonthTotalDates(markDate);\n        let currMonthStartingDay = getCurrMonthStartingDay(markDate);\n        let nextMonthStartingDay = getNextMonthStartingDay(markDate);\n        for(let i = lastMonthTotalDates - currMonthStartingDay + 1; i <= lastMonthTotalDates; ++i) {\n            arr.push(<SingleDateEventCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>)\n        }\n        for(let i = 1; i <= currMonthTotalDates; ++i) {\n            if(getMonthYear(markDate) === getMonthYear(activeDate) && i === activeDate[2]) arr.push(<SingleDateEventCalendar key={Math.random()} date={i} backgroundColor={'#dc4c3e'} fontColor={'white'} setActiveDate={this.props.setActiveDate}/>)\n            else arr.push(<SingleDateEventCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'black'} setActiveDate={this.props.setActiveDate}/>)\n        }\n        for(let i = 1; i <= 7 - nextMonthStartingDay; ++i) {\n            arr.push(<SingleDateEventCalendar key={Math.random()} date={i} backgroundColor={'transparent'} fontColor={'grey'} setActiveDate={()=>{}}/>);\n        }\n        return arr;\n    }\n    render() {\n        return <div className='event-calendar' style={{display: this.props.display}} key={Math.random()}>\n        <div className=\"event-calendar-interface\">\n            <img onClick={this.props.goToPrevYear} className=\"arrow left-double-arrow\" src={leftDoubleArrow} />\n            <img onClick={this.props.goToNextYear} className=\"arrow right-double-arrow\" src={rightDoubleArrow} />\n            <img onClick={this.props.goToPrevMonth} className=\"arrow left-arrow\" src={leftArrow} />\n            <img onClick={this.props.goToNextMonth} className=\"arrow right-arrow\" src={rightArrow} />\n            <span className=\"event-calendar-month\">{getMonthYear(this.props.markDate)}</span>\n        </div>\n        <div className=\"event-calendar-dates\">\n            {getWeekDays(true)}\n            {this.getDates(this.props.markDate, this.props.activeDate)}\n        </div>\n            </div>;\n    }\n}\n\nexport default EventCalendar;","/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventProjectSelection.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/displayArea.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventLabelSelection.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/components/EventPrioritySelection.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/userInfo.js",[],"/Users/zechuanxiao/Documents/Vanderbilt/Junior/Projects/DoListGo/TodoListN/src/reducers/allEvents.js",[],{"ruleId":"250","severity":1,"message":"251","line":16,"column":3,"nodeType":"252","messageId":"253","endLine":18,"endColumn":4},{"ruleId":"254","severity":1,"message":"255","line":72,"column":17,"nodeType":"256","endLine":72,"endColumn":121},{"ruleId":"254","severity":1,"message":"255","line":73,"column":17,"nodeType":"256","endLine":73,"endColumn":123},{"ruleId":"254","severity":1,"message":"255","line":74,"column":17,"nodeType":"256","endLine":74,"endColumn":109},{"ruleId":"254","severity":1,"message":"255","line":75,"column":17,"nodeType":"256","endLine":75,"endColumn":111},{"ruleId":"250","severity":1,"message":"251","line":10,"column":5,"nodeType":"252","messageId":"253","endLine":12,"endColumn":6},{"ruleId":"257","severity":1,"message":"258","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"261","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":31},{"ruleId":"257","severity":1,"message":"262","line":3,"column":8,"nodeType":"259","messageId":"260","endLine":3,"endColumn":26},{"ruleId":"257","severity":1,"message":"263","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":30},{"ruleId":"257","severity":1,"message":"264","line":4,"column":32,"nodeType":"259","messageId":"260","endLine":4,"endColumn":53},{"ruleId":"257","severity":1,"message":"265","line":4,"column":55,"nodeType":"259","messageId":"260","endLine":4,"endColumn":81},{"ruleId":"254","severity":1,"message":"255","line":43,"column":17,"nodeType":"256","endLine":43,"endColumn":68},{"ruleId":"254","severity":1,"message":"255","line":45,"column":17,"nodeType":"256","endLine":45,"endColumn":67},{"ruleId":"250","severity":1,"message":"251","line":4,"column":5,"nodeType":"252","messageId":"253","endLine":6,"endColumn":6},{"ruleId":"254","severity":1,"message":"255","line":80,"column":17,"nodeType":"256","endLine":80,"endColumn":108},{"ruleId":"254","severity":1,"message":"255","line":82,"column":17,"nodeType":"256","endLine":82,"endColumn":106},{"ruleId":"254","severity":1,"message":"255","line":88,"column":17,"nodeType":"256","endLine":88,"endColumn":67},{"ruleId":"254","severity":1,"message":"255","line":90,"column":17,"nodeType":"256","endLine":90,"endColumn":106},{"ruleId":"254","severity":1,"message":"255","line":78,"column":17,"nodeType":"256","endLine":78,"endColumn":110},{"ruleId":"254","severity":1,"message":"255","line":80,"column":17,"nodeType":"256","endLine":80,"endColumn":108},{"ruleId":"254","severity":1,"message":"255","line":86,"column":17,"nodeType":"256","endLine":86,"endColumn":71},{"ruleId":"254","severity":1,"message":"255","line":233,"column":25,"nodeType":"256","endLine":233,"endColumn":76},{"ruleId":"254","severity":1,"message":"255","line":235,"column":25,"nodeType":"256","endLine":235,"endColumn":73},{"ruleId":"254","severity":1,"message":"255","line":244,"column":33,"nodeType":"256","endLine":244,"endColumn":130},{"ruleId":"254","severity":1,"message":"255","line":245,"column":33,"nodeType":"256","endLine":245,"endColumn":125},{"ruleId":"254","severity":1,"message":"255","line":246,"column":33,"nodeType":"256","endLine":246,"endColumn":129},{"ruleId":"254","severity":1,"message":"255","line":247,"column":33,"nodeType":"256","endLine":247,"endColumn":130},{"ruleId":"254","severity":1,"message":"255","line":248,"column":33,"nodeType":"256","endLine":248,"endColumn":117},{"ruleId":"254","severity":1,"message":"255","line":218,"column":21,"nodeType":"256","endLine":218,"endColumn":72},{"ruleId":"254","severity":1,"message":"255","line":220,"column":21,"nodeType":"256","endLine":220,"endColumn":71},{"ruleId":"254","severity":1,"message":"255","line":223,"column":21,"nodeType":"256","endLine":223,"endColumn":118},{"ruleId":"254","severity":1,"message":"255","line":224,"column":21,"nodeType":"256","endLine":224,"endColumn":113},{"ruleId":"254","severity":1,"message":"255","line":225,"column":21,"nodeType":"256","endLine":225,"endColumn":117},{"ruleId":"254","severity":1,"message":"255","line":226,"column":21,"nodeType":"256","endLine":226,"endColumn":118},{"ruleId":"254","severity":1,"message":"255","line":227,"column":21,"nodeType":"256","endLine":227,"endColumn":110},{"ruleId":"254","severity":1,"message":"255","line":210,"column":21,"nodeType":"256","endLine":210,"endColumn":96},{"ruleId":"254","severity":1,"message":"255","line":216,"column":25,"nodeType":"256","endLine":216,"endColumn":122},{"ruleId":"254","severity":1,"message":"255","line":217,"column":25,"nodeType":"256","endLine":217,"endColumn":117},{"ruleId":"254","severity":1,"message":"255","line":218,"column":25,"nodeType":"256","endLine":218,"endColumn":121},{"ruleId":"254","severity":1,"message":"255","line":219,"column":25,"nodeType":"256","endLine":219,"endColumn":122},{"ruleId":"254","severity":1,"message":"255","line":220,"column":25,"nodeType":"256","endLine":220,"endColumn":114},{"ruleId":"250","severity":1,"message":"251","line":5,"column":5,"nodeType":"252","messageId":"253","endLine":7,"endColumn":6},{"ruleId":"250","severity":1,"message":"251","line":4,"column":5,"nodeType":"252","messageId":"253","endLine":6,"endColumn":6},{"ruleId":"250","severity":1,"message":"251","line":11,"column":5,"nodeType":"252","messageId":"253","endLine":13,"endColumn":6},{"ruleId":"254","severity":1,"message":"255","line":17,"column":13,"nodeType":"256","endLine":17,"endColumn":112},{"ruleId":"254","severity":1,"message":"255","line":18,"column":13,"nodeType":"256","endLine":18,"endColumn":114},{"ruleId":"254","severity":1,"message":"255","line":19,"column":13,"nodeType":"256","endLine":19,"endColumn":100},{"ruleId":"254","severity":1,"message":"255","line":20,"column":13,"nodeType":"256","endLine":20,"endColumn":102},{"ruleId":"250","severity":1,"message":"251","line":7,"column":5,"nodeType":"252","messageId":"253","endLine":9,"endColumn":6},{"ruleId":"254","severity":1,"message":"255","line":17,"column":13,"nodeType":"256","endLine":17,"endColumn":71},{"ruleId":"250","severity":1,"message":"251","line":10,"column":5,"nodeType":"252","messageId":"253","endLine":12,"endColumn":6},{"ruleId":"254","severity":1,"message":"255","line":21,"column":13,"nodeType":"256","endLine":21,"endColumn":71},{"ruleId":"254","severity":1,"message":"255","line":23,"column":13,"nodeType":"256","endLine":23,"endColumn":110},{"ruleId":"250","severity":1,"message":"251","line":10,"column":5,"nodeType":"252","messageId":"253","endLine":12,"endColumn":6},{"ruleId":"254","severity":1,"message":"255","line":21,"column":13,"nodeType":"256","endLine":21,"endColumn":67},{"ruleId":"254","severity":1,"message":"255","line":23,"column":13,"nodeType":"256","endLine":23,"endColumn":106},{"ruleId":"250","severity":1,"message":"251","line":11,"column":5,"nodeType":"252","messageId":"253","endLine":13,"endColumn":6},{"ruleId":"254","severity":1,"message":"255","line":35,"column":13,"nodeType":"256","endLine":35,"endColumn":112},{"ruleId":"254","severity":1,"message":"255","line":36,"column":13,"nodeType":"256","endLine":36,"endColumn":114},{"ruleId":"254","severity":1,"message":"255","line":37,"column":13,"nodeType":"256","endLine":37,"endColumn":100},{"ruleId":"254","severity":1,"message":"255","line":38,"column":13,"nodeType":"256","endLine":38,"endColumn":102},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'SingleDateCalendar' is defined but never used.","Identifier","unusedVar","'SingleDateEventCalendar' is defined but never used.","'SingleDateAddEvent' is defined but never used.","'SINGLE_DATE_CALENDAR' is defined but never used.","'SINGLE_DATE_ADD_EVENT' is defined but never used.","'SINGLE_DATE_EVENT_CALENDAR' is defined but never used."]